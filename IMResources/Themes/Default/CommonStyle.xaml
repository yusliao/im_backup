<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!--清空按钮模板样式-->
    <ControlTemplate x:Key="ClearButtonTemplate" TargetType="Button">

        <Border x:Name="bdIcon" Cursor="Hand" Grid.Column="2" HorizontalAlignment="Center" VerticalAlignment="Center" 
                            CornerRadius="100" Background="#CCCCCC" Width="16" Height="16" ToolTip="清除">
            <Path x:Name="pthIcon" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5"
                              Data="M0,0 8,8 M0,8 8,0" StrokeThickness="1.2" Stroke="White" Stretch="Fill"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter  Property="Background" Value="{StaticResource HightLightBackground}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter  Property="Background" Value="Red"/>
            </Trigger>
        </ControlTemplate.Triggers>
        <!--<Border x:Name="BdIcon"  Width="14" Height="14" Background="#E51C23" CornerRadius="10" Margin="2,0,0,0" ToolTip="清除">
                <Grid>
                    <Path x:Name="pathIcon" Data="{StaticResource GeoFork}" Stroke="White" Stretch="UniformToFill" Margin="3" StrokeThickness="2" />
                    <Rectangle x:Name="rctButton" Fill="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"></Rectangle>
                    <ContentPresenter Content="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}"   
                              HorizontalAlignment="Center"   
                              VerticalAlignment="Center"/>
                </Grid>

            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="BdIcon" Property="Background" Value="{DynamicResource MouseOverBackground}"/>
                </Trigger>
            </ControlTemplate.Triggers>-->
    </ControlTemplate>
   
    <Style x:Key="ListBoxStyle" TargetType="{x:Type ListBox}">
        <Setter Property="Background" Value="White"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="BorderBrush" Value="{Binding BorderBrush}"/>
        <Setter Property="Padding" Value="{Binding  Padding}" />
        <Setter Property="BorderThickness" Value="{Binding BorderThickness}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="1" SnapsToDevicePixels="true">
                        <ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="true"/>
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ShadowWindowStyle" TargetType="{x:Type Window}">
        <Setter Property="AllowsTransparency" Value="true"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Grid Margin="10">
                        <Rectangle Fill="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"  
                               RadiusX="3" RadiusY="3">
                            <Rectangle.Effect>
                                <DropShadowEffect Opacity="0.25" BlurRadius="10" ShadowDepth="0" Color="#000000"/>
                            </Rectangle.Effect>
                        </Rectangle>
                        <Border Background="{TemplateBinding Background}"  
                            BorderBrush="{TemplateBinding BorderBrush}"  
                            BorderThickness="{TemplateBinding BorderThickness}"  
                            Padding="{TemplateBinding Margin}"  
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"  
                            CornerRadius="3">
                            <ContentPresenter />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <GeometryGroup x:Key="clipGeometry30" FillRule="Nonzero">
        <EllipseGeometry RadiusX="15" RadiusY="15" Center="15, 15"/>
    </GeometryGroup>
    <GeometryGroup x:Key="clipGeometry34" FillRule="Nonzero">
        <EllipseGeometry RadiusX="17" RadiusY="17" Center="17, 17"/>
    </GeometryGroup>
    <GeometryGroup x:Key="clipGeometry36" FillRule="Nonzero">
        <EllipseGeometry RadiusX="18" RadiusY="18" Center="18, 18"/>
    </GeometryGroup>
    <GeometryGroup x:Key="clipGeometry40" FillRule="Nonzero">
        <EllipseGeometry RadiusX="20" RadiusY="20" Center="20, 20"/>
    </GeometryGroup>
    <GeometryGroup x:Key="clipGeometry50" FillRule="Nonzero">
        <EllipseGeometry RadiusX="25" RadiusY="25" Center="25, 25"/>
    </GeometryGroup>
    <GeometryGroup x:Key="clipGeometry60" FillRule="Nonzero">
        <EllipseGeometry RadiusX="30" RadiusY="30" Center="30, 30"/>
    </GeometryGroup>
    <GeometryGroup x:Key="clipGeometry68" FillRule="Nonzero">
        <EllipseGeometry RadiusX="34" RadiusY="34" Center="34, 34"/>
    </GeometryGroup>
    <GeometryGroup x:Key="clipGeometry70" FillRule="Nonzero">
        <EllipseGeometry RadiusX="35" RadiusY="35" Center="35, 35"/>
    </GeometryGroup>
    <GeometryGroup x:Key="clipGeometry80" FillRule="Nonzero">
        <EllipseGeometry RadiusX="40" RadiusY="40" Center="40, 40"/>
    </GeometryGroup>
    <GeometryGroup x:Key="clipGeometry100" FillRule="Nonzero">
        <EllipseGeometry RadiusX="50" RadiusY="50" Center="50, 50"/>
    </GeometryGroup>

    <Style x:Key="SelectableTextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="CaretBrush" Value="Black"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" CornerRadius="0" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost" VerticalAlignment="Center" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="border" Value="0.6"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#e58409"/>
                            <Setter Property="Cursor" Value="IBeam"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#e58409"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--关闭按钮的样式-->
    <Style x:Key="CloseStyle" TargetType="{x:Type Button}">
        <Setter Property="BorderBrush"  Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Width" Value="34"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Image x:Name="Image" Source="/IMResources;component/Image/V2/icon-close.png"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Image" Property="Source" Value="/IMResources;component/Image/V2/icon-close-click.png"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--最大化按钮样式-->
    <Style x:Key="MaximizeStyle" TargetType="{x:Type Button}">
        <Setter Property="BorderBrush"  Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Width" Value="34"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Image x:Name="Image" Source="/IMResources;component/Image/V2/icon-window.png"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Image" Property="Source" Value="/IMResources;component/Image/V2/icon-window-click.png"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--最小化按钮样式-->
    <Style x:Key="MinimizeStyle" TargetType="{x:Type Button}">
        <Setter Property="BorderBrush"  Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Width" Value="34"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Image x:Name="Image" Source="/IMResources;component/Image/V2/icon-minimize.png"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Image" Property="Source" Value="/IMResources;component/Image/V2/icon-minimize-click.png"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--复选框样式-->
    <Style x:Key="checkBoxStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator HorizontalAlignment="Left" VerticalAlignment="Center">
                        <BulletDecorator.Bullet>
                            <Border x:Name="bd"  BorderThickness="0" 
                                        BorderBrush="Transparent" 
                                        VerticalAlignment="Center" 
                                        Background="Transparent">
                                <Image  x:Name="cp" Width="16" Height="16" Source="/IMResources;component/Image/V2/checkbox.png"/>
                            </Border>
                        </BulletDecorator.Bullet>
                        <ContentPresenter Margin="5,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left" RecognizesAccessKey="True" />
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="cp" Property="Source" 
                                        Value="/IMResources;component/Image/V2/check-box.png"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="cp" Property="Source" 
                                        Value="/IMResources;component/Image/V2/checkbox.png"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsChecked" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Source" TargetName="cp" Value="/IMResources;component/Image/V2/check-box.png"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SwitchCheckBox" TargetType="{x:Type CheckBox}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <!--<Setter Property="FocusVisualStyle" Value="{DynamicResource FocusStyle}"/>-->
        <!--<Setter Property="SnapsToDevicePixels" Value="True"/>-->
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator HorizontalAlignment="Left" VerticalAlignment="Center">
                        <BulletDecorator.Bullet>
                            <Border x:Name="bd" BorderThickness="0"
                                        BorderBrush="Transparent"
                                        VerticalAlignment="Center" 
                                        Background="Transparent">
                                <Image  x:Name="cp" Width="40" Height="18" Source="/IMResources;component/Image/V2/icon-closebut.png"/>
                            </Border>
                        </BulletDecorator.Bullet>
                        <ContentPresenter Margin="18,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left" RecognizesAccessKey="True" />
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="cp" Property="Source" 
                                        Value="/IMResources;component/Image/V2/icon-open-but.png"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--按钮样式-->

   
    
    <Style x:Key="TextButtonStyle1" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#4E546A"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="#DDE3EE"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" 
                                SnapsToDevicePixels="true" CornerRadius="3">
                        <ContentPresenter x:Name="contentPresenter" 
                                              Focusable="False" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Margin="{TemplateBinding Padding}" 
                                              RecognizesAccessKey="True" TextElement.FontSize="{TemplateBinding FontSize}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"  />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#E9E9E9"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#E9E9E9"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TextButtonStyle2" TargetType="Button">
        <Setter Property="Background" Value="#4C68B9"/>
        <Setter Property="Foreground" Value="#FFFFFF"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="#4C68B9"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" 
                                SnapsToDevicePixels="true" CornerRadius="3">
                        <ContentPresenter x:Name="contentPresenter" 
                                              Focusable="False" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Margin="{TemplateBinding Padding}" 
                                              RecognizesAccessKey="True" TextElement.FontSize="{TemplateBinding FontSize}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"  />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#baccff"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#baccff"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="WrapListBoxStyle" TargetType="{x:Type ListBox}">
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Background" Value="{Binding Background}"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NoScrollViewerWrapListBoxStyle" TargetType="{x:Type ListBox}">
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border Name="Border" Background="{TemplateBinding Background}"
                                                        BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <ItemsPresenter />
                    </Border>
                    <ControlTemplate.Triggers>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="NoScrollViewerListBoxStyle" TargetType="{x:Type ListBox}">
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border Name="Border" Background="{TemplateBinding Background}"
                                                        BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <ItemsPresenter />
                    </Border>
                    <ControlTemplate.Triggers>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="Common.ListBoxItem" TargetType="{x:Type ListBoxItem}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border x:Name="PART_Border" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" BorderThickness="2">
                        <ContentPresenter IsHitTestVisible="true" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                 VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                 TextBlock.Foreground="{TemplateBinding Foreground}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="#C9C9C9"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="true">
                <Setter Property="Background" Value="#949494"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="TextBlock">
        <Setter Property="FontFamily" Value="微软雅黑"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style TargetType="TextBox">
        <Setter Property="FontFamily" Value="微软雅黑"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    
    <ControlTemplate x:Key="ExpanderToggleButton" TargetType="ToggleButton">
        <Border Name="Border" Background="Transparent" Height="25">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="20"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Rectangle Fill="Transparent" Grid.ColumnSpan="2"/>
                <Path Name="Arrow" Fill="Black" Grid.Column="0" RenderTransformOrigin="0.5,0.5"
                          HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 0 8 Z">
                    <Path.RenderTransform>
                        <RotateTransform Angle="0"/>
                    </Path.RenderTransform>
                </Path>
                <ContentPresenter x:Name="HeaderContent" Grid.Column="1" TextElement.Foreground="#333333" TextElement.FontSize="14"
                                      Margin="2" HorizontalAlignment="Left" VerticalAlignment="Center" ContentSource="Content"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <!--<Trigger Property="ToggleButton.IsMouseOver" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="{StaticResource DarkBrush}" />
                </Trigger>-->
            <!--<Trigger Property="IsPressed" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
                </Trigger>-->
            <Trigger Property="IsChecked" Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="Arrow"
                                                 Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)"
                                                 To="90"
                                                 Duration="0:0:0.4"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="Arrow"
                                                 Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)"
                                                 To="0"
                                                 Duration="0:0:0.4"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ExpanderHeaderFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Margin="0" SnapsToDevicePixels="true" Stroke="Gray" StrokeThickness="1" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="Expander">
        <Setter Property="Margin" Value="0,0,0,1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Expander">
                    <DockPanel>
                        <ToggleButton x:Name="ExpanderButton" Cursor="Hand"
                              DockPanel.Dock="Top" Focusable="False"
                              Template="{StaticResource ExpanderToggleButton}"
                              Content="{TemplateBinding Header}" FocusVisualStyle="{x:Null}"
                              IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                              OverridesDefaultStyle="True">
                        </ToggleButton>
                        <StackPanel>
                            <ContentPresenter x:Name="ExpanderContent"
                                  ContentSource="Content" Visibility="Collapsed"
                                  DockPanel.Dock="Bottom">
                                <!--<ContentPresenter.LayoutTransform>
                                    <ScaleTransform ScaleY="0"/>
                                </ContentPresenter.LayoutTransform>-->
                            </ContentPresenter>
                        </StackPanel>
                        
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="ExpanderContent" Property="Visibility" Value="Visible"/>
                            <!--<Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ExpanderContent"
                                                 Storyboard.TargetProperty="(ContentPresenter.LayoutTransform).(ScaleTransform.ScaleY)"                                                 
                                                 To="1"
                                                 Duration="0:0:0.1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ExpanderContent"
                                                 Storyboard.TargetProperty="(ContentPresenter.LayoutTransform).(ScaleTransform.ScaleY)"
                                                 To="0"
                                                 Duration="0:0:0.1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="reSizeThumb" TargetType="{x:Type Thumb}">
        <Border Background="{DynamicResource BlueBrush}">
        </Border>
    </ControlTemplate>

    <ControlTemplate x:Key="moveThumb" TargetType="{x:Type Thumb}">
        <Grid x:Name="bg">
            <Grid.Background>
                <RadialGradientBrush>
                    <GradientStop Color="#00000000" Offset="1"/>
                    <GradientStop Color="#50000000" Offset="1"/>
                </RadialGradientBrush>
            </Grid.Background>
        </Grid>
    </ControlTemplate>
 

    <!--<Style TargetType="{x:Type ContextMenu}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
        <Setter Property="BorderBrush" Value="#D7D7D8"/>
        <Setter Property="Background" Value="#FFFFFF"/>
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="#333333"/>
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Grid.IsSharedSizeScope" Value="True" />
        <Setter Property="HasDropShadow" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Grid>
                        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" Margin="5"
                                BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle"
                                                Grid.IsSharedSizeScope="True" Margin="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                KeyboardNavigation.TabNavigation="Cycle" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

  <!-- Add New Style  liyi-->

    <!--页面（窗口）标题样式-->
    <Style x:Key="MainTitleStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="#9BA3B1"/>
        <Setter Property="Margin" Value="10,0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>
    
    <!--内格中 标题样式-->
    <Style x:Key="CellTitleStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="#4E546A"/>
        <Setter Property="Margin" Value="10,0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <!--内格中 标题(水印)样式-->
    <Style x:Key="CellTitleWatermarkStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource CellTitleStyle}">
        <Setter Property="Foreground" Value="#C3C9D5"/>
    </Style>

    <!-- 通用内容按钮样式 -->
    <Style x:Key="CommonButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="Foreground" Value="#4E546A"/>
        <Setter Property="MinHeight" Value="28"/>
        <Setter Property="MinWidth" Value="68"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="#DDE3EE"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Padding" Value="10,2"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" SnapsToDevicePixels="true" >
                        <ContentPresenter HorizontalAlignment="Center"  VerticalAlignment="Center" Margin="{TemplateBinding Padding}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#FFE9E9E9"/>
                            <Setter Property="Foreground" Value="#FF333333"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="#E9E9E9"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- 高亮内容按钮样式 -->
    <Style x:Key="HightLightButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource CommonButtonStyle}">
        <Setter Property="Background" Value="#4C68B9"/>
        <Setter Property="Foreground" Value="#FFFFFF"/>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="#AA4C68B9"/>
                <Setter Property="Foreground" Value="Snow"/>
            </Trigger> 
        </Style.Triggers>
    </Style>

    <!-- 平整带标签编辑框，鼠标进入有笔表示可编辑， 为空时 tag显示-->
    <Style x:Key="TextBoxSmoothTagStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Foreground" Value="#4E546A"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Margin" Value="10,1"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Padding" Value="0,3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate  TargetType="{x:Type TextBox}">
                    <Border x:Name="border" Background="Transparent" SnapsToDevicePixels="True">
                        <Grid Margin="{TemplateBinding Padding}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="14"/>
                            </Grid.ColumnDefinitions>
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"  Background="{TemplateBinding Background}">
                                <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                            </Border>
                            <ContentControl x:Name="PART_Tag" Content="{TemplateBinding Tag}" IsHitTestVisible="False" Visibility="Collapsed"/>

                            <Image x:Name="PART_Pen" Source="/IMResources;component/Image/V2/pen.png" Margin="3,0,-10,0"
                                       Grid.Column="1" Height="14" Width="14" HorizontalAlignment="Left" Visibility="Collapsed"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#D7D7D8"/>
                            <Setter  TargetName="PART_Pen" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="Background" Value="White"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#D7D7D8"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">

                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text" Value=""/>
                                <Condition Property="IsFocused" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="PART_Tag" Value="Visible"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text" Value="{x:Null}"/>
                                <Condition Property="IsFocused" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="PART_Tag" Value="Visible"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>


    <!-- 带标签编辑框 为空时 tag显示-->
    <Style x:Key="TextBoxTagStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Foreground" Value="#4E546A"/>
        <Setter Property="BorderBrush" Value="#D7D7D8"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Margin" Value="10,1"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Padding" Value="5,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate  TargetType="{x:Type TextBox}">
                    <Border x:Name="border"  BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"  
                            Background="{TemplateBinding Background}" SnapsToDevicePixels="True" CornerRadius="5">
                        <Grid Margin="{TemplateBinding Padding}" VerticalAlignment="Center">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                            <ContentControl x:Name="PART_Tag" Content="{TemplateBinding Tag}" IsHitTestVisible="False" Visibility="Collapsed"/> 
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger> 
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="Background" Value="White"/> 
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">

                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text" Value=""/>
                                <Condition Property="IsFocused" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="PART_Tag" Value="Visible"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text" Value="{x:Null}"/>
                                <Condition Property="IsFocused" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="PART_Tag" Value="Visible"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>

    <!-- 窗口状态按钮基本样式 -->
    <Style x:Key="BaseWinStateButtonStyle" TargetType="{x:Type ButtonBase}">
        <Setter Property="Background"  Value="Transparent"/>
        <Setter Property="Foreground"  Value="#FF333333"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Width" Value="28"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
    </Style>
    <!--最小化按钮样式-->
    <Style x:Key="MinButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseWinStateButtonStyle}">
         <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border Background="{TemplateBinding Background}">
                        <Path Data="M10,15 20,15" Stroke="{TemplateBinding Foreground}" StrokeThickness="1"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FFe9e9e9"/> 
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--最大化/恢复默认样式-->
    <Style x:Key="MaxButtonStyle" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource BaseWinStateButtonStyle}"> 
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="{TemplateBinding Background}">
                        <Path x:Name="path" Data="M0,0 8,0 8,8 0,8z " HorizontalAlignment="Center" Stroke="{TemplateBinding Foreground}" VerticalAlignment="Center" StrokeThickness="1"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FFe9e9e9"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="path" Property="Data" Value="M0,3 6,3 6,9 0,9z M3,3 3,0 9,0 9,6 6,6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- 关闭按钮样式 -->
    <Style x:Key="CloseButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseWinStateButtonStyle}"> 
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid x:Name="Grid" Background="Transparent">
                        <Path x:Name="Path" Data="M0,0 8,8 M0,8 8,0" StrokeThickness="1" Stroke="{TemplateBinding Foreground}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Grid" Property="Background" Value="Red"/>
                            <Setter TargetName="Path" Property="Stroke" Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- 通用复选框样式 --> 
    <Style x:Key="CommonCheckBoxStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="BorderBrush" Value="#D7D7D7"/>
        <Setter Property="Foreground" Value="#4E546A"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid Background="Transparent">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="18"/>
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Rectangle Height="18" Fill="{TemplateBinding Background}"
                                       StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{TemplateBinding BorderBrush}"/>
                        <Path x:Name="pathIcon" Visibility="Collapsed" Height="18" Data="M4,9 8,13 15,5" Stroke="Green" StrokeThickness="1.5"/>
                        <ContentPresenter Grid.Column="1" VerticalAlignment="Center" Margin="5,0,0,0" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="pathIcon" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#E9E9E9"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- 附加标签样式-如在消息数量显示的时候用 -->
    <Style x:Key="AppendLabelStyle" TargetType="{x:Type Label}">
        <Setter Property="Background" Value="Red"/>
        <Setter Property="Margin" Value="-10"/>
        <Setter Property="RenderTransform" >
            <Setter.Value>
                <TranslateTransform X="-5" Y="-10"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Width" Value="20"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="#4C68B9"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="100">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Content" Value="{x:Null}">
                            <Setter TargetName="Bd" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="Content" Value="">
                            <Setter TargetName="Bd" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger  Property="Content" Value="0">
                            <Setter TargetName="Bd" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- 路径矢量按钮样式-->
    <Style x:Key="PathButtonStyle" TargetType="{x:Type ButtonBase}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="#FF666666"/>
        <Setter Property="Padding" Value="6"/>
        <Setter Property="Width" Value="28"/>
        <Setter Property="Height" Value="28"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border SnapsToDevicePixels="True" Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Path Data="{TemplateBinding Tag}" Stroke="{TemplateBinding Foreground}" Stretch="Fill"
                                  VerticalAlignment="Center" Margin="{TemplateBinding Padding}"
                                  StrokeThickness="1.2" StrokeStartLineCap="Round" StrokeEndLineCap="Round" StrokeLineJoin="Round"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground"  Value="#FF0043FF"/>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="true">
                            <Setter Property="Foreground"  Value="#FF0043FF"/>
                            <Setter Property="BorderBrush" Value="#FF0043FF"/>
                            <Setter Property="BorderThickness" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity"  Value="0.33"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>