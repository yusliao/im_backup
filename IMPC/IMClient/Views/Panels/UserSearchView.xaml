<UserControl x:Class="IMClient.Views.Panels.UserSearchView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
             xmlns:cv="clr-namespace:IMClient.Converter"
             xmlns:local="clr-namespace:IMClient.Views.Controls"
                  mc:Ignorable="d" d:DesignHeight="300" d:DesignWidth="500">
    <UserControl.Resources>
        <cv:IntToVisibilityConverterEx x:Key="IntToV"/>
        <cv:BoolToVisibilityConvert x:Key="BToV"/>
        <cv:NullToVisibilityConverter x:Key="nullToV"/>
        <Style x:Key="SendButtonStyle" TargetType="Button">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Image x:Name="img" Width="22" Height="22" Source="/IMAssets;component/Images/UserCard/message1.png"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="img" Property="Source" Value="/IMAssets;component/Images/UserCard/message2.png"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ApplyButtonStyle" TargetType="ButtonBase">
            <Setter Property="Width" Value="22"/>
            <Setter Property="Height" Value="22"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ButtonBase">
                        <Image x:Name="img" Source="/IMAssets;component/Images/UserCard/addfriend1.png"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="img" Property="Source" Value="/IMAssets;component/Images/UserCard/addfriend2.png"/>
                            </Trigger>
                            <Trigger Property="ToggleButton.IsChecked" Value="true">
                                <Setter TargetName="img" Property="Source" Value="/IMAssets;component/Images/UserCard/addfriend2.png"/>
                                <Setter Property="IsEnabled" Value="False"/>
                                <Setter Property="Cursor" Value="Arrow"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="AttentionButtonStyle" TargetType="ButtonBase">
            <Setter Property="Width" Value="22"/>
            <Setter Property="Height" Value="22"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ButtonBase">
                        <Image x:Name="img" Source="/IMAssets;component/Images/UserCard/attention1.png"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="img" Property="Source" Value="/IMAssets;component/Images/UserCard/attention2.png"/>
                            </Trigger>
                            <Trigger Property="ToggleButton.IsChecked" Value="true">
                                <Setter TargetName="img" Property="Source" Value="/IMAssets;component/Images/UserCard/attention2.png"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid x:Name="gridLayout"   Margin="0,60,0,0" Background="Transparent">
        <Grid.RowDefinitions>
            <RowDefinition Height="60"/>
            <RowDefinition />
        </Grid.RowDefinitions>
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
            <TextBox x:Name="txtFind" Width="260"  MaxLength="20"  Style="{StaticResource TextBoxTagStyle}">
                <TextBox.Tag>
                    <StackPanel Orientation="Horizontal">
                        <Path Data="{StaticResource GeoMagnifier}" Stroke="{StaticResource LightForeground}" 
                              Width="15" Height="15" Stretch="Fill" StrokeThickness="2"/>
                        <TextBlock  Text="手机号/昵称" />
                    </StackPanel>
                </TextBox.Tag>
            </TextBox>
            <Button Content="查  找" x:Name="btnSearch" IsDefault="True" Width="70" Height="30" Style="{DynamicResource HightLightButtonStyle}"
                    Command="{Binding SearchCommand,Mode=OneWay}" CommandParameter="{Binding Text,ElementName=txtFind}" />
        </StackPanel>


        <StackPanel Orientation="Vertical" Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="{Binding IsSearchUserData,Converter={StaticResource BToV}}">
            <Image Width="120" Height="90"   Source="/IMAssets;component/Images/nofriend.png"/>
            <TextBlock Text="对不起，没有查询到相关用户..." FontSize="{StaticResource UpperFontSize}" Foreground="{StaticResource LightForeground}" 
                       HorizontalAlignment="Center" Margin="20"/>
        </StackPanel>
        <local:AnimationLoading Grid.Row="1" x:Name="aniLoading"  Width="60" Height="60" Margin="0,0,0,20" Visibility="{Binding IsDataLoading,Converter={StaticResource BToV}}"/>
        <ScrollViewer x:Name="sv" Grid.Row="1"  Visibility="{Binding Items.Count,Converter={StaticResource IntToV},Mode=OneWay}"  >
            <ItemsControl  Background="{StaticResource CommonBackground}" ItemsSource="{Binding Items,Mode=OneWay}" Padding="10,0,10,10"  >
                <ItemsControl.ItemTemplate>
                    <DataTemplate  >
                        <Border  x:Name="bd" Height="50" Padding="50,0" Cursor="Arrow" Background="Transparent">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="50"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Ellipse Margin="5" Cursor="Hand" >
                                    <Ellipse.Fill>
                                        <ImageBrush ImageSource="{Binding Model.HeadImg}"/>
                                    </Ellipse.Fill>
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="MouseLeftButtonUp">
                                            <i:InvokeCommandAction Command ="{Binding ShowBusinessCard}" CommandParameter="{Binding Model}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Ellipse>
                                <Grid  Grid.Column="1"   HorizontalAlignment="Left" VerticalAlignment="Center">
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Grid.Column="1" TextTrimming="CharacterEllipsis" 
                            HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="{StaticResource DarkForeground}" FontSize="{StaticResource CommonFontSize}">
                                    <Run  Text="{Binding Model.DisplayName,Mode=OneWay}"/>
                                    </TextBlock>
                                    <TextBlock Text="{Binding NumPhone}" Grid.Row="1" Visibility="{Binding NumPhone,Converter={StaticResource nullToV}}"/>
                                </Grid>

                                <StackPanel Orientation="Horizontal" Grid.Column="2" HorizontalAlignment="Right">
                                    <TextBlock x:Name="tbInfo" VerticalAlignment="Center" FontSize="{StaticResource CommonFontSize}" Foreground="{StaticResource HightLightBackground}"/>
                                    <Button Style="{StaticResource SendButtonStyle}"
                                        x:Name="btnChat" Visibility="Visible" ToolTip="发消息" Margin="6">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                                <i:InvokeCommandAction Command ="{Binding JupmToChatCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </Button>
                                    <ToggleButton Command="{Binding AttentionCommand,Mode=OneWay}" IsChecked="{Binding Model.IsAttention}" Style="{StaticResource AttentionButtonStyle}"
                                        x:Name="btnAttention" Visibility="Collapsed" ToolTip="{Binding AttentionTip,Mode=OneWay}" Margin="6"/>
                                    <ToggleButton Command="{Binding ApplyFriendCommand,Mode=OneWay}" IsChecked="{Binding Model.IsApplyFriend,Mode=OneWay}"
                                                 Tag="{StaticResource GeoAddUser }" ToolTipService.ShowOnDisabled="True" Margin="6"
                                        x:Name="btnApplyFriend"  Visibility="Collapsed" ToolTip="{Binding ApplyTip,Mode=OneWay}" >
                                        <ToggleButton.Style>
                                            <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource ApplyButtonStyle}"/>
                                        </ToggleButton.Style>
                                    </ToggleButton>
                                </StackPanel>
                            </Grid>

                        </Border>
                        <DataTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="bd" Property="Background" Value="{StaticResource MouseOverBackground}"/>
                            </Trigger>

                            <!--<DataTrigger Binding="{Binding Model.LinkDelType}" Value="0">
                                <Setter TargetName="btnChat" Property="Visibility" Value="Visible"/>
                            </DataTrigger>-->
                            <DataTrigger Binding="{Binding Model.LinkDelType}" Value="1">
                                <Setter TargetName="btnAttention" Property="Visibility" Value="Visible"/>
                                <!--<Setter TargetName="btnApplyFriend" Property="Visibility" Value="Visible"/>-->
                            </DataTrigger>
                            <!--<DataTrigger Binding="{Binding Model.LinkDelType}" Value="2">
                                <Setter TargetName="btnChat" Property="Visibility" Value="Visible"/>
                            </DataTrigger>-->
                            <DataTrigger Binding="{Binding Model.LinkDelType}" Value="3">
                                <Setter TargetName="btnAttention" Property="Visibility" Value="Visible"/>
                                <!--<Setter TargetName="btnApplyFriend" Property="Visibility" Value="Visible"/>-->
                            </DataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsAddFriend}" Value="true"/>
                                    <Condition Binding="{Binding Model.LinkDelType}" Value="1"/>
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter TargetName="btnApplyFriend" Property="Visibility" Value="Visible"/>
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsAddFriend}" Value="true"/>
                                    <Condition Binding="{Binding Model.LinkDelType}" Value="3"/>
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter TargetName="btnApplyFriend" Property="Visibility" Value="Visible"/>
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </ScrollViewer>

    </Grid>
</UserControl>
