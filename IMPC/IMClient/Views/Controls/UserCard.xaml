
    <UserControl x:Class="IMClient.Views.Controls.UserCard"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:imcc="clr-namespace:IMCustomControls;assembly=IMCustomControls"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
             xmlns:cv="clr-namespace:IMClient.Converter"
             mc:Ignorable="d" 
             xmlns:helper="clr-namespace:IMClient.Helper"
             d:DesignHeight="230" d:DesignWidth="280">
    <UserControl.Resources>
        <cv:BoolToVisibilityConvert x:Key="btv"/>
        <cv:PhoneNumberToView x:Key="ptv"/>
        <cv:ReverseBoolConvertVisibility x:Key="revBtv"/>
        <Style x:Key="SendButtonStyle" TargetType="Button">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Image x:Name="img" Width="22" Height="22" Source="/IMAssets;component/Images/UserCard/message1.png"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="img" Property="Source" Value="/IMAssets;component/Images/UserCard/message2.png"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="ShareCardButtonStyle" TargetType="Button">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid Background="Transparent">
                            <!--<Image x:Name="img" Width="22" Height="22" Source="/IMAssets;component/Images/newImage/personalCard.png"/>#727272-->
                            <Path x:Name="path" StrokeThickness="0.8" Stroke="#11977c"   Data="M18.35,7.42H15.3v1h3.05a3.19,3.19,0,0,1,3.13,3.25v6.57a3.2,3.2,0,0,1-3.13,3.26H5.62a3.2,3.2,0,0,1-3.14-3.26V11.67A3.2,3.2,0,0,1,5.62,8.42h2.7v-1H5.62a4.2,4.2,0,0,0-4.14,4.25v6.57A4.21,4.21,0,0,0,5.62,22.5H18.35a4.2,4.2,0,0,0,4.13-4.26V11.67A4.2,4.2,0,0,0,18.35,7.42Z"/>
                            <Path x:Name="path1" StrokeThickness="0.8" Stroke="#11977c" Data="M9.5,5.21l2-2V14a.5.5,0,1,0,1,0V3.18l2,2a.5.5,0,0,0,.71,0,.51.51,0,0,0,0-.71L12.36,1.63a.5.5,0,0,0-.71,0s0,0,0,0h0L8.79,4.5a.5.5,0,1,0,.71.71Z"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="path" Property="Stroke" Value="#727272"/>
                                <Setter TargetName="path1" Property="Stroke" Value="#727272"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ApplyButtonStyle" TargetType="ButtonBase">
            <Setter Property="Width" Value="22"/>
            <Setter Property="Height" Value="22"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ButtonBase">
                        <Image x:Name="img" Source="/IMAssets;component/Images/UserCard/addfriend1.png"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="img" Property="Source" Value="/IMAssets;component/Images/UserCard/addfriend2.png"/>
                            </Trigger>
                            <Trigger Property="ToggleButton.IsChecked" Value="true">
                                <Setter TargetName="img" Property="Source" Value="/IMAssets;component/Images/UserCard/addfriend2.png"/>
                                <Setter Property="IsEnabled" Value="False"/>
                                <Setter Property="Cursor" Value="Arrow"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="AttentionButtonStyle" TargetType="ButtonBase">
            <Setter Property="Width" Value="22"/>
            <Setter Property="Height" Value="22"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ButtonBase">
                        <Image x:Name="img" Source="/IMAssets;component/Images/UserCard/attention1.png"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="img" Property="Source" Value="/IMAssets;component/Images/UserCard/attention2.png"/>
                            </Trigger>
                            <Trigger Property="ToggleButton.IsChecked" Value="true">
                                <Setter TargetName="img" Property="Source" Value="/IMAssets;component/Images/UserCard/attention2.png"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </UserControl.Resources>

    <Grid x:Name="gridLayout" Margin="0,10,0,0" Background="Transparent">
        <Grid.RowDefinitions>
            <RowDefinition Height="80"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="40"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <StackPanel Margin="5,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Top">
            <TextBlock Margin="5,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Top">
            <Run Text="{Binding Model.Name,Mode=OneWay}" FontSize="{StaticResource UpperFontSize}" Foreground="{StaticResource DarkForeground}"/> 
            <ContentControl Content="{Binding Model.Sex,Mode=OneWay}" Style="{StaticResource SexContentStyle}" FocusVisualStyle="{x:Null}" />
            </TextBlock>
            <StackPanel Orientation="Vertical">
                <TextBlock Margin="6,2,0,0" Foreground="{StaticResource LightForeground}" Height="28" VerticalAlignment="Top">
                        <Run Text="可访号:" Foreground="{StaticResource LightForeground}" BaselineAlignment="Center"/>
                        <TextBlock Text="{Binding Model.KfNum,Mode=OneWay}" Foreground="{StaticResource LightForeground}" MaxWidth="110" TextTrimming="CharacterEllipsis" ToolTip="{Binding Model.KfNum,Mode=OneWay}" Margin="1,0,0,0" Visibility="{Binding IsKfNumEdit,Converter={StaticResource revBtv}}"/>
                        <TextBox x:Name="txtCard" MaxLength="20" Style="{DynamicResource EditCardStyle}" MaxWidth="110" InputMethod.IsInputMethodEnabled="False" VerticalAlignment="Center"    PreviewKeyDown="txtCard_KeyDown" HorizontalAlignment="Left" Foreground="{StaticResource LightForeground}"
                                 Text="{Binding Model.KfNum,Mode=OneWay}" Margin="-2,4,0,0" IsReadOnly="True" Height="24" ToolTip="{Binding Model.KfNum,Mode=OneWay}"  GotFocus="txtCard_GotFocus" Visibility="{Binding IsKfNumEdit,Converter={StaticResource btv}}">
                            <!--<i:Interaction.Triggers>
                                <i:EventTrigger EventName="LostKeyboardFocus">
                                    <i:InvokeCommandAction Command="{Binding ChanagedKfCardCommand}" CommandParameter="{Binding Text,ElementName=txtCard}"/> 
                                    </i:EventTrigger>
                            </i:Interaction.Triggers>-->
                        </TextBox>
                </TextBlock>
                <TextBlock Text="{Binding ErrorPromt,Mode=TwoWay}" x:Name="txtBlock" FontSize="11" Margin="48,2,0,0" Foreground="Red"/>
            </StackPanel>
        </StackPanel>


        <Ellipse Cursor="Hand" Width="70" Height="70" Margin="10,0"  HorizontalAlignment="Right" VerticalAlignment="Top" PreviewMouseLeftButtonUp="Head_MouseLeftButtonDown">
            <Ellipse.Fill>
                <ImageBrush x:Name="ibHead" ImageSource="{Binding Model.HeadImg,Mode=OneWay}"/>
            </Ellipse.Fill>
        </Ellipse>

        <TextBlock x:Name="tbNameInGroup" Visibility="Collapsed" Style="{StaticResource CellTitleStyle}" VerticalAlignment="Bottom" Margin="10,10,60,10">
            <Run Text="群中显示"  Foreground="{StaticResource LightForeground}" BaselineAlignment="Center"/> 
             <Rectangle Margin="10,0"/>
            <Run x:Name="runNameInGroup" Text=""/>
        </TextBlock>

        <Rectangle Style="{StaticResource LineRectStyle}" Grid.ColumnSpan="2"  />
        <Rectangle Style="{StaticResource LineRectStyle}" Grid.Row="5" Grid.ColumnSpan="2" Margin="0,10,0,0" VerticalAlignment="Top" />

        <StackPanel Grid.Row="1" Orientation="Horizontal">
            <StackPanel.Style>
                <Style TargetType="{x:Type StackPanel}" >
                    <Setter Property="Visibility" Value="Collapsed"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Model.LinkDelType}" Value="0">
                            <Setter  Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </StackPanel.Style>
            <TextBlock Text="备       注"  Foreground="{StaticResource LightForeground}"  Style="{StaticResource CellTitleStyle}"/>
            <TextBox x:Name="tbNickName"  Tag="[点击添加备注]" Text="{Binding Model.NickName,Mode=OneWay}" Width="120" helper:MaxByteAttachedProperty.MaxByteLength="20" helper:MaxByteAttachedProperty.EncodeModel="Default"
                     Style="{StaticResource TextBoxSmoothTagStyle}" VerticalContentAlignment="Center" Margin="15,0,0,0">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="LostKeyboardFocus">
                        <i:InvokeCommandAction Command="{Binding ChangedFriendNickNameCommand,Mode=OneWay}" CommandParameter="{Binding Text,ElementName=tbNickName,Mode=OneWay}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TextBox>
        </StackPanel>

        <TextBlock Grid.Row="2" Style="{StaticResource CellTitleStyle}">
            <Run Text="手机号码"  Foreground="{StaticResource LightForeground}" BaselineAlignment="Center"/> 
             <Rectangle Margin="10,0"/>
            <Run Text="{Binding Model,Mode=OneWay,Converter={StaticResource ptv}}"/>
        </TextBlock>

        <TextBlock Grid.Row="3" Style="{StaticResource CellTitleStyle}" TextTrimming="CharacterEllipsis">
            <Run Text="地       区"  Foreground="{StaticResource LightForeground}" BaselineAlignment="Center"/> 
             <Rectangle Margin="10,0"/>
            <Run Text="{Binding Model.Area,Mode=OneWay}"/>
        </TextBlock>
        
        <StackPanel  Grid.Row="4" Margin="10,5,0,0"  Orientation="Horizontal" Visibility="{Binding IsExitFriendSource,Converter={StaticResource btv}}">
            <TextBlock Text="来       源" FontSize="14" Foreground="{StaticResource LightForeground}" />
            <TextBlock Text="{Binding ApplyFriendContent}" Margin="30,0,5,0" MaxWidth="170"  TextTrimming="CharacterEllipsis" FontSize="14"/>
        </StackPanel>


        <Control x:Name="cc" Grid.Row="5" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="10,10,10,0">
            <Control.Template>
                <ControlTemplate TargetType="{x:Type Control}" >
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" VerticalAlignment="Center">

                        <Menu x:Name="menu" Background="Transparent" Margin="6">
                            <Menu.Items>
                                <MenuItem Style="{StaticResource ButtonMenuItemStyle}" DataContext="{Binding DataContext, ElementName=gridLayout}">
                                    <MenuItem.Header>
                                        <Grid Width="22" Height="22" VerticalAlignment="Center">
                                            <!--<Path x:Name="path" Data="M0,0 0,0 M8,0 8,0 M16,0 16,0" VerticalAlignment="Center"
                                            StrokeThickness="3" Stroke="{StaticResource DarkForeground}" StrokeStartLineCap="Round" StrokeEndLineCap="Round"/>-->
                                            <Image x:Name="img" Source="/IMAssets;component/Images/UserCard/more1.png"/>
                                        </Grid>
                                    </MenuItem.Header>
                                    <MenuItem.Items>
                                        <MenuItem x:Name="miDefriend" Header="移至黑名单" Command="{Binding DefriendCommand}"/>
                                        <MenuItem x:Name="miDeleteBlacklist" Header="移出黑名单" Command="{Binding DeleteBlacklistCommand}"/>
                                    </MenuItem.Items>
                                </MenuItem>
                            </Menu.Items>
                        </Menu>

                        <Button Command="{Binding ReConnectCommand,Mode=OneWay}" Style="{StaticResource LargerRectPathButtonStyle}" Tag="{StaticResource GeoConnect }" 
                           x:Name="btnReConnect" Visibility="Collapsed" ToolTip="重新连接" IsEnabled="{Binding IsEnableReconnectButton}"/>

                        <Button Style="{StaticResource LargerRectPathButtonStyle}" Tag="{StaticResource GeoRefresh }"
                           x:Name="btnRefresh" Visibility="Collapsed" ToolTip="刷新"/>
                        <Button Command="{Binding SharePersonCard,Mode=OneWay}" Style="{StaticResource ShareCardButtonStyle}"
                                        x:Name="btnShareCard" ToolTip="发送名片" Margin="6"/>

                        <ToggleButton Command="{Binding AttentionCommand,Mode=OneWay}" IsChecked="{Binding Model.IsAttention}" Style="{StaticResource AttentionButtonStyle}"
                           x:Name="btnAttention" Visibility="Collapsed" Margin="6" ToolTip="{Binding AttentionTip,Mode=OneWay}"/>

                        <ToggleButton Command="{Binding ApplyFriendCommand,Mode=OneWay}" IsChecked="{Binding IsApplyFriend,Mode=OneWay}"
                                                 ToolTipService.ShowOnDisabled="True" Margin="6" 
                                        x:Name="btnApplyFriend" Visibility="Collapsed" ToolTip="{Binding ApplyTip,Mode=OneWay}" >
                            <ToggleButton.Style>
                                <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource ApplyButtonStyle}">
                                    <Style.Triggers>
                                        <Trigger Property="IsChecked" Value="true">
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>

                        <Button Command="{Binding JupmToChatCommand,Mode=OneWay}" Style="{StaticResource SendButtonStyle}"
                                        x:Name="btnChat" ToolTip="发消息" Margin="6" Click="btnChat_Click"/>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Model.LinkDelType}" Value="-1">
                            <Setter TargetName="btnReConnect" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="btnRefresh" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="btnChat" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="menu" Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                        <!--<DataTrigger Binding="{Binding Model.LinkDelType}" Value="0">
                            <Setter TargetName="btnChat" Property="Visibility" Value="Visible"/> 
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Model.LinkDelType}" Value="2">
                            <Setter TargetName="btnChat" Property="Visibility" Value="Visible"/>
                        </DataTrigger>-->
                        <DataTrigger Binding="{Binding Model.LinkDelType}" Value="1">
                            <Setter TargetName="btnAttention" Property="Visibility" Value="Visible"/>
                            <!--<Setter TargetName="btnApplyFriend" Property="Visibility" Value="Visible"/>-->
                            <!--<Setter TargetName="btnChat" Property="Visibility" Value="Collapsed"/>-->
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Model.LinkDelType}" Value="3">
                            <Setter TargetName="btnAttention" Property="Visibility" Value="Visible"/>
                            <!--<Setter TargetName="btnApplyFriend" Property="Visibility" Value="Visible"/>-->
                            <!--<Setter TargetName="btnChat" Property="Visibility" Value="Collapsed"/>-->
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsAddFriend}" Value="true"/>
                                <Condition Binding="{Binding Model.LinkDelType}" Value="1"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="btnApplyFriend" Property="Visibility" Value="Visible"/>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsAddFriend}" Value="true"/>
                                <Condition Binding="{Binding Model.LinkDelType}" Value="3"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="btnApplyFriend" Property="Visibility" Value="Visible"/>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding Model.LinkType}" Value="0">
                            <Setter TargetName="miDefriend" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="miDeleteBlacklist" Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Model.LinkType}" Value="1">
                            <Setter TargetName="miDefriend" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="miDeleteBlacklist" Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Model.LinkType}" Value="2">
                            <Setter TargetName="miDefriend" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="miDeleteBlacklist" Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Model.LinkType}" Value="3">
                            <Setter TargetName="miDefriend" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="miDeleteBlacklist" Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Control.Template>
        </Control>


    </Grid>

</UserControl>
