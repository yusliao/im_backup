<Window x:Class="IMClient.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:imuc="clr-namespace:IMClient.Views.Controls"
        xmlns:imc="clr-namespace:IMCustomControls;assembly=IMCustomControls"  
         xmlns:ctrl="clr-namespace:IMClient.Views.Panels"
         xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"       
        xmlns:cv="clr-namespace:IMClient.Converter" FontFamily="微软雅黑"
        WindowStyle="None" AllowsTransparency="True" Background="Transparent" 
        WindowStartupLocation="CenterScreen"  AllowDrop="True"
        mc:Ignorable="d" 
       Height="600" Width="880" MinWidth="760" MinHeight="520" Icon="{Binding LoginUser.User.HeadImg,Mode=OneWay}" Title="{Binding MainTitle,Mode=OneWay}" >
    <Window.Resources>
        <cv:BoolConvertVisibility x:Key="btv"/>
        <cv:HeadImgConvter x:Key="htc"/>
        <cv:ReverseBoolConvertVisibility x:Key="rbtv"/>
        <cv:NullToVisibilityConverter x:Key="nullToVisibility"/>
        <cv:UnReadMessageCountConverter x:Key="unreadMsg"/>
        <Style x:Key="CurrentUserStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Width"  Value="40"/>
            <Setter Property="Height"  Value="40"/>
            <Setter Property="Cursor"  Value="Hand"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid   >
                            <ContentPresenter />
                            <Ellipse x:Name="elp" Fill="Black" Opacity="0.5" Visibility="Collapsed"/>
                            <Image x:Name="GridNetIcon" Width="15" Height="15" HorizontalAlignment="Center" VerticalAlignment="Center"
                                               Source="/IMAssets;component/Images/network_error.png" Visibility="Collapsed"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseDirectlyOver" Value="False">
                                <Setter Property="IsChecked" Value="False"/>
                            </Trigger>
                            <Trigger Property="IsTabStop" Value="False">
                                <Setter TargetName="elp" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="GridNetIcon" Property="Visibility" Value="Visible"/> 
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="TxtSearchStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Height" Value="28"/>
            <Setter Property="Foreground" Value="{StaticResource DarkForeground}"/>
            <Setter Property="BorderBrush" Value="{StaticResource CommonBorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Margin" Value="10,1"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="ContextMenu">
                <Setter.Value>
                    <ContextMenu>
                        <MenuItem Header="复制" Command="Copy"/>
                        <MenuItem Header="剪切" Command="Cut"/>
                        <MenuItem Header="粘贴" Command="Paste"/>
                    </ContextMenu>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate  TargetType="{x:Type TextBox}">
                        <Border x:Name="border"  BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"  
                            Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <Grid Margin="5,2" VerticalAlignment="Center">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Image Width="11" Height="11" Margin="2,0,0,0"  Source="{StaticResource GlobalsearchIcon}" />
                                <ScrollViewer Grid.Column="1" x:Name="PART_ContentHost" Style="{x:Null}" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                                <ContentControl Grid.Column="1" Margin="4,0,0,0" x:Name="PART_Tag" Content="{TemplateBinding Tag}" TextElement.Foreground="#FFAAAAAA" IsHitTestVisible="False" Visibility="Collapsed"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter Property="Background" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">

                            </Trigger>

                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Text" Value=""/>
                                    <Condition Property="IsFocused" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Visibility" TargetName="PART_Tag" Value="Visible"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Text" Value="{x:Null}"/>
                                    <Condition Property="IsFocused" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Visibility" TargetName="PART_Tag" Value="Visible"/>
                            </MultiTrigger>

                            <!--<Trigger Property="IsTabStop" Value="False">
                            <Setter Property="Visibility" TargetName="PART_Tag" Value="Collapsed"/>
                        </Trigger>-->
                        </ControlTemplate.Triggers>
                    </ControlTemplate>

                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="DeleteButton" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Image Width="14" Height="14" Source="{StaticResource ClearKeywordIcon}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <!--<Setter TargetName="rectangle" Property="Opacity" Value="0.7">
                                </Setter>-->
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <!--<Setter TargetName="rectangle" Property="Opacity" Value="1">
                                </Setter>-->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
  
    <Grid x:Name="gridLayout" Margin="10"  >
        <Grid.RowDefinitions>
            <RowDefinition Height="26"/>
            <RowDefinition Height="40"/>
            <RowDefinition />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="60"/>
            <ColumnDefinition Width="240"/>
            <ColumnDefinition Width="1"/>
            <ColumnDefinition />
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>

        <Rectangle Grid.RowSpan="10" Grid.ColumnSpan="10" Effect="{StaticResource CommonEffect}" Fill="#FFFFFF"/>

        <Rectangle x:Name="rectLeft" Grid.RowSpan="3" Cursor="ScrollAll" Fill="#4A4848" MouseLeftButtonDown="rect_MouseLeftButtonDown"/>
        <Rectangle Fill="#F9FBFF" Grid.Column="1" Grid.RowSpan="3"/>
        <ToggleButton  x:Name="img" Style="{StaticResource CurrentUserStyle}"   
                       Command="{Binding ShowBusinessCard,Mode=OneWay}" CommandParameter="{Binding LoginUser.User,Mode=OneWay}"
                    IsTabStop="{Binding LoginUser.IsOnline}" Grid.RowSpan="2" VerticalAlignment="Bottom">
            <Grid>
                <Ellipse >
                    <Ellipse.Fill>
                        <ImageBrush x:Name="loginICON" 
                                    ImageSource="{Binding LoginUser.User.HeadImg,Mode=OneWay,Converter={StaticResource htc},ConverterParameter=90}"/>
                    </Ellipse.Fill>
                </Ellipse> 
            </Grid>
        </ToggleButton>

        <DockPanel Grid.Row="2" Margin="0,30,0,0" ContentElement.PreviewMouseLeftButtonDown="DockPanel_PreviewMouseLeftButtonDown" >
            <DockPanel.Resources>
                <Style TargetType="{x:Type imc:IconStateButton}">
                    <Setter Property="DockPanel.Dock" Value="Top" />
                    <Setter Property="Width" Value="22" />
                    <Setter Property="Height" Value="22"/>
                    <Setter Property="Margin" Value="0,0,0,28"/>
                </Style>
            </DockPanel.Resources>
            <imc:IconStateButton x:Name="BtnMessage" ToolTip="消息" 
                Command="{Binding NaviCommand}" CommandParameter="{Binding ChatListVM}"
                IsChecked="{Binding ChatListVM.IsChecked,Mode=TwoWay}"
                IconNormal="/IMAssets;component/Images/newImage/message2.png" 
                IconMouseOver="/IMAssets;component/Images/newImage/message1.png"
                IconChecked="/IMAssets;component/Images/newImage/message3.png" UseLayoutRounding="True">
                <Label Style="{StaticResource AppendLabelStyle}" HorizontalAlignment="Right" VerticalAlignment="Center" VerticalContentAlignment="Center" Content="{Binding TotalUnReadCount, Converter={StaticResource unreadMsg},Mode=OneWay}"/>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseDoubleClick">
                        <i:InvokeCommandAction Command ="{Binding JumpChatItemCommand}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </imc:IconStateButton>

            <imc:IconStateButton x:Name="BtnFriend" ToolTip="通讯录" 
                Command="{Binding NaviCommand}" CommandParameter="{Binding FriendListVM}"
                IsChecked="{Binding FriendListVM.IsChecked,Mode=TwoWay}"
                IconNormal="/IMAssets;component/Images/newImage/friend2.png"
                IconMouseOver="/IMAssets;component/Images/newImage/friend1.png"
                IconChecked="/IMAssets;component/Images/newImage/friend3.png">
                <Label Style="{StaticResource AppendLabelStyle}" BorderBrush="Transparent" HorizontalAlignment="Right" VerticalAlignment="Top" 
                    Content="{Binding FriendListVM.ApplyCount, Converter={StaticResource unreadMsg}}" />
            </imc:IconStateButton>

            <imc:IconStateButton x:Name="BtnGroup" ToolTip="群组" 
                Command="{Binding NaviCommand}" CommandParameter="{Binding GroupListVM}"
                IsChecked="{Binding GroupListVM.IsChecked,Mode=TwoWay}"
                IconNormal="/IMAssets;component/Images/newImage/group2.png"
                IconMouseOver="/IMAssets;component/Images/newImage/group1.png"
                IconChecked="/IMAssets;component/Images/newImage/group3.png">
            </imc:IconStateButton>

            <imc:IconStateButton x:Name="BtnAttention" ToolTip="关注" 
                Command="{Binding NaviCommand}" CommandParameter="{Binding AttentionListVM}"
                IsChecked="{Binding AttentionListVM.IsChecked,Mode=TwoWay}"
                IconNormal="/IMAssets;component/Images/newImage/attention2.png"
                IconMouseOver="/IMAssets;component/Images/newImage/attention1.png"
                IconChecked="/IMAssets;component/Images/newImage/attention3.png">
            </imc:IconStateButton>

            <imc:IconStateButton x:Name="BtnSet" ToolTip="更多" VerticalAlignment="Bottom"
                Command="{Binding NaviCommand}" CommandParameter="{Binding SettingListVM}"
                IsChecked="{Binding SettingListVM.IsChecked,Mode=TwoWay}"
                IconNormal="/IMAssets;component/Images/newImage/setting2.png"
                IconMouseOver="/IMAssets;component/Images/newImage/setting1.png"
                IconChecked="/IMAssets;component/Images/newImage/setting3.png">
            </imc:IconStateButton>
        </DockPanel>

        <Rectangle x:Name="rectTop" Cursor="ScrollAll" Grid.RowSpan="2" Grid.Column="1" Fill="#F9FBFF" MouseLeftButtonDown="rect_MouseLeftButtonDown"/>
        <Rectangle x:Name="rectTop2" Cursor="ScrollAll" Grid.RowSpan="2" Grid.Column="2" Grid.ColumnSpan="3" Fill="#FFFFFF" MouseLeftButtonDown="rect_MouseLeftButtonDown"/>
        
        <Rectangle x:Name="rectTemp" Grid.Row="1" Grid.Column="1" Margin="38,0,10,0"/>
        <StackPanel  Grid.Row="1" Grid.Column="1" Margin="0,0,0,5" Orientation="Horizontal" VerticalAlignment="Center"
                     Visibility="{Binding IsChecked, ElementName=BtnSet,Converter={StaticResource rbtv}}">


            <Grid Background="#F9FBFF">
                <Border CornerRadius="12" x:Name="border" Background="#EFF2F7" Width="{Binding ActualWidth, ElementName=rectTemp}" BorderThickness="0" 
                         Margin="10,0,0,0"/>
                <TextBox x:Name="tbSearch"  Height="28" Width="165" TextWrapping="NoWrap" Text="{Binding SearchKey,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" GotFocus="tbSearch_GotFocus" LostFocus="tbSearch_LostFocus" Tag="{Binding SearchTip,Mode=OneWay}"
                         Style="{StaticResource TxtSearchStyle}" Background="Transparent" BorderThickness="0" Margin="16,-2,25,-2" 
                         MaxLength="20"/>
                <Button Style="{StaticResource DeleteButton}" HorizontalAlignment="Right" Margin="0,0,8,0" 
                        Visibility="{Binding SearchKey,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay,Converter={StaticResource nullToVisibility} }" Click="Button_Click"/>
            </Grid>
            <Menu Margin="5,0,16,0" Background="Transparent" VerticalAlignment="Center" >
                <Menu.Items>
                    <MenuItem  Style="{StaticResource ButtonMenuItemStyle}" DataContext="{Binding DataContext, ElementName=gridLayout}">
                        <MenuItem.Header>
                            <Image Width="20" Height="20" Source="/IMAssets;component/Images/add.png"/>
                        </MenuItem.Header>
                        <MenuItem.Items>
                            <MenuItem Header="查找好友"  Command="{Binding NaviCommand}" CommandParameter="{Binding SearchUserListVM}"/>
                            <MenuItem Header="创建群聊" x:Name="miCreateGroupChat" Click="miCreateGroupChat_Click"/>
                        </MenuItem.Items>
                    </MenuItem>
                </Menu.Items>
            </Menu>
            <!--<ToggleButton x:Name="btnSearch" Style="{StaticResource SearchButtonStyle}"/>-->
        </StackPanel>

        <ContentControl x:Name="bdListView" Grid.Column="1" Grid.Row="2" Content="{Binding ListViewModel.View,Mode=OneWay}" FocusVisualStyle="{x:Null}" Margin="0,1"/>
        <ctrl:SearchResultView  Grid.Column="1" Grid.Row="2" Visibility="{Binding IsSearchVisibility,Converter={StaticResource btv}}"/>
        <ContentControl x:Name="bdContentView" Grid.Column="3" Grid.RowSpan="3"
                     Content="{Binding ListViewModel.SelectedItem.View,Mode=OneWay ,IsAsync=True}" FocusVisualStyle="{x:Null}"/>

        <StackPanel x:Name="stkpState" Grid.RowSpan="2" Grid.Column="3" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Top" Panel.ZIndex="100">
            <Button  x:Name="btnMin" Click="btnMin_Click" Style="{StaticResource MinButtonStyle}"  />
            <ToggleButton x:Name="btnMax" Style="{StaticResource MaxButtonStyle}"  Click="btnMax_Click"/>
            <Button  x:Name="btnClose" Click="btnClose_Click" Style="{StaticResource CloseButtonStyle}"  />
        </StackPanel>

        <imc:TopMostPopup x:Name="ppBusinessCard" PlacementTarget="{Binding ElementName=gridLayout}"
               Placement="Mouse" Width="320" HorizontalOffset="-10" VerticalOffset="-25" Height="286" AllowsTransparency="True" StaysOpen="False"
               IsOpen="{Binding IsOpenBusinessCard}"  >
            <Grid>
                <Border  Background="{StaticResource AppendBackground}"  CornerRadius="5" BorderThickness="10" Padding="10" Effect="{StaticResource CommonEffect}"/>
                <Border  CornerRadius="5" BorderThickness="10" Padding="10" >
                    <imuc:UserCard DataContext="{Binding DataContext.UserBusinessCard,ElementName=gridLayout}"/>
                </Border>
            </Grid>
           
        </imc:TopMostPopup>

        <Grid Grid.RowSpan="10" Grid.ColumnSpan="10" Thumb.DragDelta="Size_DragDelta" Margin="-5">
            <Grid.Resources>
                <Style TargetType="{x:Type Thumb }">
                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Focusable" Value="True"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Thumb}">
                                <Rectangle Fill="{TemplateBinding Background}"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Grid.Resources>
            <Thumb Width="10" HorizontalAlignment="Left" Uid="Left" Cursor="SizeWE"/>
            <Thumb Width="10" HorizontalAlignment="Right" Uid="Right" Cursor="SizeWE"/>
            <Thumb Height="10" VerticalAlignment="Top" Uid="Top" Cursor="SizeNS"/>
            <Thumb Height="10" VerticalAlignment="Bottom" Uid="Bottom" Cursor="SizeNS"/>
 
            <Thumb Width="10" Height="10" HorizontalAlignment="Left" VerticalAlignment="Top" Uid="LeftTop" Cursor="SizeNWSE"/>
            <Thumb Width="10" Height="10" HorizontalAlignment="Right" VerticalAlignment="Top" Uid="RightTop" Cursor="SizeNESW"/>
            <Thumb Width="10" Height="10" HorizontalAlignment="Left" VerticalAlignment="Bottom" Uid="LeftBottom" Cursor="SizeNESW"/>
            <Thumb Width="10" Height="10" HorizontalAlignment="Right" VerticalAlignment="Bottom" Uid="RightBottom" Cursor="SizeNWSE"/>
        </Grid>

        <Rectangle Style="{StaticResource LineVRectStyle}" Grid.Column="2" Grid.RowSpan="3"/>
    </Grid>
</Window>
