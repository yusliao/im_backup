<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" >

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/IMAssets;component/Styles/BaseAssets.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <Style x:Key="ContentButtonStyle" TargetType="{x:Type ButtonBase}"  >
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="5,2"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/> 
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="{StaticResource HightLightBackground}"/>
        <Setter Property="FontSize" Value="{StaticResource CommonFontSize}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" Value="{StaticResource DarkForeground}"/>
                            <Setter Property="Background" Value="{StaticResource MouseOverBackground}"/>
                            <Setter TargetName="border" Property="CornerRadius" Value="4"/>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="true">
                            <Setter Property="Foreground" Value="White"/>
                            <Setter Property="Background" Value="{StaticResource HightLightBackground}"/>
                            <Setter TargetName="border" Property="CornerRadius" Value="4"/>
                        </Trigger>
                        <!--<Trigger Property="IsEnabled" Value="False">
                            <Setter Property="IsHitTestVisible" Value="False" />
                            <Setter Property="Foreground" Value="Gray"/>
                            <Setter Property="Opacity" Value="0.1"/>
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="TextBox" x:Key="EditCardStyle">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border BorderThickness="0">
                        <Grid Margin="{TemplateBinding Padding}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="14"/>
                            </Grid.ColumnDefinitions>
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"/>

                            <ScrollViewer x:Name="PART_ContentHost" Margin="2,2" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                            <Image x:Name="PART_Pen" Source="{DynamicResource EditCardIcon}" RenderOptions.BitmapScalingMode="HighQuality" Margin="3,0,-10,0"
                                       Grid.Column="1"  Stretch="None" HorizontalAlignment="Left" Visibility="Collapsed"  />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter  TargetName="PART_Pen" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter  TargetName="PART_Pen" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="BorderBrush" Value="#DDE3EE"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="true">
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="BorderBrush" Value="#DDE3EE"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ContentButtonStyle_BackAllChatMessages" TargetType="{x:Type ButtonBase}"  >
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="5,2"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="{StaticResource HightLightBackground}"/>
        <Setter Property="FontSize" Value="{StaticResource CommonFontSize}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <StackPanel x:Name="border" Background="{TemplateBinding Background}" Orientation="Horizontal">
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        <Path x:Name="PART_Pen" Data="M21,8H7.39l4.15-4.14a1,1,0,0,0,0-1.42,1,1,0,0,0-1.42,0L4.46,8.12A1,1,0,0,0,4.21,9a1,1,0,0,0,.25.88l5.66,5.66a1,1,0,0,0,1.42-1.42L7.39,10H21A10.29,10.29,0,0,1,31.52,20,10.29,10.29,0,0,1,21,30H5v2H21A12.26,12.26,0,0,0,33.48,20,12.26,12.26,0,0,0,21,8Z" Stroke="{StaticResource HightLightBackground}"
                                        Height="14" Width="14" Stretch="Fill" HorizontalAlignment="Left" StrokeThickness="0.8"/>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" Value="{StaticResource DarkForeground}"/>
                            <Setter Property="Background" Value="{StaticResource MouseOverBackground}"/>
                            <Setter TargetName="PART_Pen" Property="Stroke" Value="{StaticResource DarkForeground}"/>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="true">
                            <Setter Property="Foreground" Value="White"/>
                            <Setter Property="Background" Value="{StaticResource HightLightBackground}"/>
                           
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ContentButtonDarkStyle" TargetType="{x:Type ButtonBase}"  >
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="5,2"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="#333333"/>
        <Setter Property="FontSize" Value="{StaticResource CommonFontSize}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" Value="{StaticResource HightLightBackground}"/>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="true">
                            <Setter Property="Foreground" Value="White"/>
                            <Setter Property="Background" Value="{StaticResource HightLightBackground}"/>
                            <Setter TargetName="border" Property="CornerRadius" Value="4"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="ButtonItemStyle" TargetType="{x:Type ButtonBase}" BasedOn="{StaticResource ContentButtonStyle}"> 
        <Setter Property="Foreground" Value="{StaticResource MiddleForeground}"/>
        <Setter Property="FontSize" Value="{StaticResource LowerFontSize}"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Padding" Value="0"/>
    </Style>

    <Style x:Key="SexContentStyle" TargetType="{x:Type ContentControl}">
        <Setter Property="Width" Value="12"/>
        <Setter Property="Height" Value="12"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <Grid>
                        <Image x:Name="img" Source="/IMAssets;component/Images/sex_girl.png" /> 
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Content" Value="1">
                            <Setter TargetName="img" Property="Source" Value="/IMAssets;component/Images/sex_boy.png"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
  

    <!-- 窗口状态按钮基本样式 -->
    <Style x:Key="BaseWinStateButtonStyle" TargetType="{x:Type ButtonBase}">
        <Setter Property="Background"  Value="Transparent"/>
        <Setter Property="Foreground"  Value="{StaticResource MiddleForeground}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Width" Value="28"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
    </Style>
    <!--最小化按钮样式-->
    <Style x:Key="MinButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseWinStateButtonStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border Background="{TemplateBinding Background}">
                        <Path Data="M10,12 20,12" Stroke="{TemplateBinding Foreground}" StrokeThickness="1"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FFe9e9e9"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--最大化/恢复默认样式-->
    <Style x:Key="MaxButtonStyle" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource BaseWinStateButtonStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="{TemplateBinding Background}">
                        <Path x:Name="path" Data="M0,0 8,0 8,8 0,8z " HorizontalAlignment="Center" Stroke="{TemplateBinding Foreground}" VerticalAlignment="Center" StrokeThickness="1"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FFe9e9e9"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="path" Property="Data" Value="M0,3 6,3 6,9 0,9z M3,3 3,0 9,0 9,6 6,6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- 关闭按钮样式 -->
    <Style x:Key="CloseButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseWinStateButtonStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid x:Name="Grid" Background="Transparent">
                        <Path x:Name="Path" Data="M0,0 8,8 M0,8 8,0" StrokeThickness="1" Stroke="{TemplateBinding Foreground}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Grid" Property="Background" Value="Red"/>
                            <Setter TargetName="Path" Property="Stroke" Value="White"/>
                            <Setter TargetName="Path" Property="StrokeThickness" Value="2"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- 打叉按钮 样式-->
    <Style x:Key="ForkButtonStyle" TargetType="{x:Type ButtonBase}">
        <Setter Property="FontSize" Value="{StaticResource LowerFontSize}"/>
        <Setter Property="Background" Value="{StaticResource SelectedBackground}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Width" Value="20"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="bdIcon" Cursor="Hand" Grid.Column="2" HorizontalAlignment="Center" VerticalAlignment="Center" 
                            CornerRadius="100" Background="{TemplateBinding Background}">
                        <Path x:Name="pthIcon" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5"
                              Data="M0,0 8,8 M0,8 8,0" StrokeThickness="1.2" Stroke="{TemplateBinding Foreground}" Stretch="Fill"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter  Property="Background" Value="{StaticResource HightLightBackground}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter  Property="Background" Value="Red"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--打钩按钮 样式-->
    <Style x:Key="HookButtonStyle" TargetType="{x:Type ButtonBase}">
        <Setter Property="FontSize" Value="{StaticResource LowerFontSize}"/>
        <Setter Property="Background" Value="{StaticResource SelectedBackground}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Width" Value="20"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="bdIcon" Cursor="Hand" Grid.Column="2" HorizontalAlignment="Center" VerticalAlignment="Center" 
                            CornerRadius="100" Background="{TemplateBinding Background}">
                        <Path x:Name="pthIcon" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5"
                              Data="M0,15 8,20 20,5" StrokeThickness="1.2" Stroke="{TemplateBinding Foreground}" Stretch="Fill"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter  Property="Background" Value="{StaticResource HightLightBackground}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter  Property="Background" Value="Green"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- 通用 CheckBox 样式-->
    <Style x:Key="CommonCheckBoxStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="Foreground" Value="{StaticResource HightLightBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource CommonBorderBrush}"/>
        <Setter Property="FontSize" Value="{StaticResource CommonFontSize}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" MinWidth="16"/>
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Border Width="16" Height="16" CornerRadius="3" Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <Path x:Name="Icon" Visibility="Collapsed"
                                  Data="M1,5 5,9 12,2" HorizontalAlignment="Center" VerticalAlignment="Center" StrokeThickness="1" Stroke="{TemplateBinding Foreground}"/>
                        </Border>
                        <ContentPresenter Grid.Column="1" TextElement.Foreground="#333333" VerticalAlignment="Center" Margin="5,0,0,0"/>
                    </Grid>
                    <ControlTemplate.Triggers> 
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="Icon" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="SwitchCheckBox" TargetType="{x:Type CheckBox}">
        <Setter Property="Margin" Value="10,0"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator HorizontalAlignment="Left" VerticalAlignment="Center">
                        <BulletDecorator.Bullet>
                            <Border x:Name="bd" BorderThickness="0"
                                        BorderBrush="Transparent"
                                        VerticalAlignment="Center" 
                                        Background="Transparent">
                                <Image  x:Name="cp" Width="40" Height="18" Source="/IMAssets;component/Images/icon-closebut.png"/>
                            </Border>
                        </BulletDecorator.Bullet>
                        <ContentPresenter Margin="18,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left" RecognizesAccessKey="True" />
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="cp" Property="Source" 
                                        Value="/IMAssets;component/Images/icon-open-but.png"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- 通用内容按钮样式 -->
    <Style x:Key="CommonButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="Foreground" Value="#4E546A"/>
        <Setter Property="MinHeight" Value="28"/>
        <Setter Property="MinWidth" Value="68"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="#DDE3EE"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Padding" Value="10,2"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" SnapsToDevicePixels="true" >
                        <ContentPresenter HorizontalAlignment="Center"  VerticalAlignment="Center" Margin="{TemplateBinding Padding}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#FFE9E9E9"/>
                            <Setter Property="Foreground" Value="#FF333333"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="#E9E9E9"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- 高亮内容按钮样式 -->
    <Style x:Key="HightLightButtonStyle" TargetType="{x:Type ButtonBase}" >
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Background" Value="{StaticResource HightLightBackground}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="{StaticResource HightLightBackground}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="MinHeight" Value="30"/>
        <Setter Property="MinWidth" Value="68"/>
        <Setter Property="FontSize" Value="{StaticResource CommonFontSize}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Padding" Value="10,2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" SnapsToDevicePixels="true" CornerRadius="{StaticResource CommonCornerRadius }" >
                        <Grid> 
                            <ContentPresenter HorizontalAlignment="Center" Content="{TemplateBinding Content}" VerticalAlignment="Center" Margin="{TemplateBinding Padding}" /> 
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#FF80e8e1"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.9"/>
                            <Setter Property="Background" Value="#FF80e8e1"/>
                            <Setter Property="Foreground" Value="#F3F3F3"/>
                        </Trigger>
                        <!--<Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="{StaticResource CommonBackground}"/>
                            <Setter Property="Foreground" Value="{StaticResource HightLightBackground}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource HightLightBackground}"/>
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- 高亮内容按钮样式 反向-->
    <Style x:Key="HightLightButtonReverStyle" TargetType="{x:Type ButtonBase}" >
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Background" Value="{StaticResource CommonBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource LightForeground}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="MinHeight" Value="28"/>
        <Setter Property="MinWidth" Value="68"/>
        <Setter Property="Foreground" Value="{StaticResource MiddleForeground}"/>
        <Setter Property="FontSize" Value="{StaticResource CommonFontSize}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Padding" Value="10,2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" SnapsToDevicePixels="true" CornerRadius="{StaticResource CommonCornerRadius }" >
                        <Grid> 
                            <ContentPresenter HorizontalAlignment="Center"  VerticalAlignment="Center" Margin="{TemplateBinding Padding}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{StaticResource HightLightBackground}"/>
                            <Setter Property="Foreground" Value="White"/>
                            <Setter Property="BorderBrush" Value="{StaticResource HightLightBackground}"/>
                        </Trigger> 
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- 平整带标签编辑框，鼠标进入有笔表示可编辑， 为空时 tag显示-->
    <Style x:Key="TextBoxSmoothTagStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Foreground" Value="#4E546A"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Margin" Value="10,1"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Padding" Value="0,2"/>
        <Setter Property="ContextMenu">
            <Setter.Value>
                <ContextMenu>
                    <MenuItem Header="复制" Command="Copy"/>
                    <MenuItem Header="剪切" Command="Cut"/>
                    <MenuItem Header="粘贴" Command="Paste"/>
                </ContextMenu>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate  TargetType="{x:Type TextBox}">
                    <Border x:Name="border" Background="Transparent" SnapsToDevicePixels="True">
                        <Grid Margin="{TemplateBinding Padding}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="14"/>
                            </Grid.ColumnDefinitions>
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"  Background="{TemplateBinding Background}">
                                <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                            </Border>
                            <ContentControl x:Name="PART_Tag" Content="{TemplateBinding Tag}" TextElement.Foreground="{StaticResource LightForeground}" IsHitTestVisible="False" Visibility="Collapsed"
                                           HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                            <Image x:Name="PART_Pen" Source="{DynamicResource EditCardIcon}" RenderOptions.BitmapScalingMode="HighQuality" Margin="3,0,-10,0"
                                       Grid.Column="1"  Stretch="None" HorizontalAlignment="Left" Visibility="Collapsed"  />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#D7D7D8"/>
                            <Setter  TargetName="PART_Pen" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="Background" Value="White"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#D7D7D8"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">

                        </Trigger>

                        <Trigger Property="IsTabStop" Value="false">
                            <Setter  TargetName="PART_Tag" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                      
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text" Value=""/>
                                <Condition Property="IsFocused" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="PART_Tag" Value="Visible"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text" Value="{x:Null}"/>
                                <Condition Property="IsFocused" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="PART_Tag" Value="Visible"/>
                        </MultiTrigger>
                        <Trigger Property="IsHitTestVisible" Value="false">
                            <Setter  TargetName="PART_Tag" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>


    <!-- 带标签编辑框 为空时 tag显示-->
    <Style x:Key="TextBoxTagStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Height" Value="28"/>
        <Setter Property="Foreground" Value="{StaticResource DarkForeground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource CommonBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Margin" Value="10,1"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="ContextMenu">
            <Setter.Value>
                <ContextMenu>
                    <MenuItem Header="复制" Command="Copy"/>
                    <MenuItem Header="剪切" Command="Cut"/>
                    <MenuItem Header="粘贴" Command="Paste"/>
                </ContextMenu>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate  TargetType="{x:Type TextBox}">
                    <Border x:Name="border"  BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"  
                            Background="{TemplateBinding Background}" SnapsToDevicePixels="True" CornerRadius="3">
                        <Grid Margin="5,2" VerticalAlignment="Center">
                            <ScrollViewer x:Name="PART_ContentHost" Style="{x:Null}" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                            <ContentControl x:Name="PART_Tag" Content="{TemplateBinding Tag}" TextElement.Foreground="#FFAAAAAA" IsHitTestVisible="False" Visibility="Collapsed"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="Background" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">

                        </Trigger>
                        
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text" Value=""/>
                                <Condition Property="IsFocused" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="PART_Tag" Value="Visible"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text" Value="{x:Null}"/>
                                <Condition Property="IsFocused" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="PART_Tag" Value="Visible"/>
                        </MultiTrigger>
                        <!--<Trigger Property="IsTabStop" Value="False">
                            <Setter Property="Visibility" TargetName="PART_Tag" Value="Collapsed"/>
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>
 
    <!-- 路径矢量矩形按钮样式-->
    <Style x:Key="RectPathButtonStyle" TargetType="{x:Type ButtonBase}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{StaticResource MiddleForeground}"/>
        <Setter Property="Padding" Value="6"/>
        <Setter Property="Width" Value="28"/>
        <Setter Property="Height" Value="28"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border  SnapsToDevicePixels="True" Background="Transparent" RenderTransformOrigin="0.5,0.5"
                            BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Path x:Name="path" Data="{TemplateBinding Tag}" Stroke="#727272" Stretch="Fill"
                                  VerticalAlignment="Center" Margin="{TemplateBinding Padding}"
                                  StrokeThickness="1.2" StrokeStartLineCap="Round" StrokeEndLineCap="Round" StrokeLineJoin="Round">
                            <Path.RenderTransform>
                                <ScaleTransform x:Name="scale"/>
                            </Path.RenderTransform>
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="path" Property="Stroke" Value="{StaticResource HightLightBackground}"/>
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="scale" Storyboard.TargetProperty="ScaleX">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0" Value="1"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.9"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="scale" Storyboard.TargetProperty="ScaleY">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0" Value="1"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.9"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="true">
                            <Setter TargetName="path" Property="Stroke" Value="{StaticResource HightLightBackground}"/>
                            <!--<Setter Property="BorderBrush" Value="#FF0043FF"/>
                            <Setter Property="BorderThickness" Value="1"/>-->
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False"> 
                            <Setter Property="Foreground" Value="{StaticResource LightForeground}"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="LargerRectPathButtonStyle" TargetType="{x:Type ButtonBase}" >
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{StaticResource MiddleForeground}"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="Margin" Value="5,0"/>
        <Setter Property="Width" Value="28"/>
        <Setter Property="Height" Value="28"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border  SnapsToDevicePixels="True" Background="Transparent" RenderTransformOrigin="0.5,0.5"
                            BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Path x:Name="path" Data="{TemplateBinding Tag}" Stroke="{TemplateBinding Foreground}" Stretch="Fill"
                                  VerticalAlignment="Center" Margin="{TemplateBinding Padding}" Fill="{TemplateBinding Background}"
                                  StrokeThickness="1.2" StrokeStartLineCap="Round" StrokeEndLineCap="Round" StrokeLineJoin="Round">
                            <Path.RenderTransform>
                                <ScaleTransform x:Name="scale"/>
                            </Path.RenderTransform>
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground"  Value="#1FCEC3"/>
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="scale" Storyboard.TargetProperty="ScaleX">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0" Value="1"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.9"/> 
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="scale" Storyboard.TargetProperty="ScaleY">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0" Value="1"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.9"/> 
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Foreground"  Value="SteelBlue"/>
                            <Setter Property="Background"  Value="{StaticResource HightLightBackground}"/>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="true">
                            <Setter Property="Foreground"  Value="SteelBlue"/> 
                            <Setter Property="Background"  Value="{StaticResource HightLightBackground}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Cursor"  Value="Arrow"/>
                            <Setter Property="ToolTip" Value=""/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    
    <!-- 路径矢量圆形按钮样式-->
    <Style x:Key="EllipsePathButtonStyle" TargetType="{x:Type ButtonBase}">
        <Setter Property="Cursor"  Value="Hand"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Width" Value="24"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="Background" Value="{StaticResource HightLightBackground}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                                            Background="{TemplateBinding Background}" CornerRadius="100" Padding="{TemplateBinding Padding}">
                       <Path x:Name="pathIcon" Margin="3" 
                            Data="{TemplateBinding Content}" Stretch="Fill" StrokeThickness="2" Stroke="{TemplateBinding Foreground}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="pathIcon" Property="Margin" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter> 
    </Style>

    <Style x:Key="SearchButtonStyle" TargetType="{x:Type ButtonBase}">
        <Setter Property="Cursor"  Value="Hand"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Width" Value="24"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="Background" Value="{StaticResource HightLightBackground}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                                            Background="{TemplateBinding Background}" CornerRadius="100" Padding="{TemplateBinding Padding}">
                        <Image Source="/IMAssets;component/Images/search.png"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="TabControlNormalBorderBrush" Color="#8C8E94" />
    <SolidColorBrush x:Key="TabItemSelectedBackground" Color="#F9F9F9" />
    <SolidColorBrush x:Key="TabItemHotBorderBrush" Color="#3C7FB1" />
    <SolidColorBrush x:Key="TabItemDisabledBackground" Color="#F4F4F4" />
    <SolidColorBrush x:Key="TabItemDisabledBorderBrush" Color="#FFC9C7BA" />
    <LinearGradientBrush x:Key="ButtonNormalBackground" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0" Color="#F3F3F3" />
        <GradientStop Offset="0.5" Color="#EBEBEB" />
        <GradientStop Offset="0.5" Color="#DDDDDD" />
        <GradientStop Offset="1" Color="#CDCDCD" />
    </LinearGradientBrush>
    <Style x:Key="tabpanel-style" TargetType="{x:Type TabPanel}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>
    <Style x:Key="TabItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle
                        Margin="3,3,3,1"
                        SnapsToDevicePixels="true"
                        Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                        StrokeDashArray="1 2"
                        StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="EquityFinancing_TabControl_Style" TargetType="{x:Type TabControl}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="Padding" Value="4,4,4,4" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{StaticResource TabControlNormalBorderBrush}" />
        <Setter Property="Background" Value="#F9F9F9" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid
                        ClipToBounds="true"
                        KeyboardNavigation.TabNavigation="Local"
                        SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0" />
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="Auto" />
                            <RowDefinition x:Name="RowDefinition1" Height="*" />
                        </Grid.RowDefinitions>
                        <TabPanel
                            x:Name="HeaderPanel"
                            Grid.Row="0"
                            Grid.Column="0"
                            Margin="0"
                            Panel.ZIndex="1"
                            IsItemsHost="true"
                            KeyboardNavigation.TabIndex="1"
                            Style="{DynamicResource tabpanel-style}">
                            <!--<TabPanel.Background>
                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                    <GradientStop Offset="0" Color="#FF4A4A4A" />
                                    <GradientStop Offset="0.506" Color="#FF363636" />
                                    <GradientStop Offset="1" Color="#FF4A4A4A" />
                                </LinearGradientBrush>
                            </TabPanel.Background>-->
                        </TabPanel>
                        <Border
                            x:Name="ContentPanel"
                            Grid.Row="1"
                            Grid.Column="0"
                           
                            BorderThickness="1"
                            KeyboardNavigation.DirectionalNavigation="Contained"
                            KeyboardNavigation.TabIndex="2"
                            KeyboardNavigation.TabNavigation="Local">
                            <ContentPresenter
                                x:Name="PART_SelectedContentHost"
                                Margin="{TemplateBinding Padding}"
                                ContentSource="SelectedContent"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="1" />
                            <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                            <Setter TargetName="RowDefinition1" Property="Height" Value="Auto" />
                            <Setter TargetName="HeaderPanel" Property="Margin" Value="2,0,2,2" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="HeaderPanel" Property="Grid.Column" Value="0" />
                            <Setter TargetName="ContentPanel" Property="Grid.Column" Value="1" />
                            <Setter TargetName="ColumnDefinition0" Property="Width" Value="Auto" />
                            <Setter TargetName="ColumnDefinition1" Property="Width" Value="*" />
                            <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                            <Setter TargetName="RowDefinition1" Property="Height" Value="0" />
                            <Setter TargetName="HeaderPanel" Property="Margin" Value="2,2,0,2" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="HeaderPanel" Property="Grid.Column" Value="1" />
                            <Setter TargetName="ContentPanel" Property="Grid.Column" Value="0" />
                            <Setter TargetName="ColumnDefinition0" Property="Width" Value="*" />
                            <Setter TargetName="ColumnDefinition1" Property="Width" Value="Auto" />
                            <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                            <Setter TargetName="RowDefinition1" Property="Height" Value="0" />
                            <Setter TargetName="HeaderPanel" Property="Margin" Value="0,2,2,2" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="EquityFinancing_TabItem_Style" TargetType="{x:Type TabItem}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource TabItemFocusVisual}" />
        <Setter Property="Foreground" Value="#333333" />
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Padding" Value="6,1,6,1" />
        <!--<Setter Property="BorderBrush" Value="{StaticResource TabControlNormalBorderBrush}" />-->
        <!--<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}" />-->
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid Cursor="Hand">
                        <Border
                            x:Name="Bd"
                            Padding="12,3,12,4"
                            BorderThickness="0">
                            <ContentPresenter
                                x:Name="Content"
                                HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                ContentSource="Header"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <!--<Border
                            x:Name="border1"
                            Width="0.5"
                            Height="Auto"
                            Margin="0,2"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Stretch"
                            CornerRadius="2">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                    <GradientStop Offset="0" Color="#FF4A4A4A" />
                                    <GradientStop Offset="0.519" Color="#FF404040" />
                                    <GradientStop Offset="0.99" Color="#FF4A4A4A" />
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <Border
                            x:Name="border2"
                            Width="1"
                            Height="25"
                            HorizontalAlignment="Right"
                            Background="#ff303030" />-->
                        <Border
                            x:Name="border"
                            Height="2"
                            VerticalAlignment="Bottom"
                            Background="White" Width="35"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Bd" Property="Background" Value="White" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="White" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="White" />
                        </Trigger>-->
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Panel.ZIndex" Value="1" />
                            <Setter TargetName="border" Property="Background" Value="#1FCEC3" />
                            <!--<Setter TargetName="Bd" Property="Background" Value="{x:Null}" />-->
                            <Setter Property="Foreground" Value="#333333" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="false" />
                                <Condition Property="IsMouseOver" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource TabItemHotBorderBrush}" />
                        </MultiTrigger>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter TargetName="Bd" Property="BorderThickness" Value="1,0,1,1" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter TargetName="Bd" Property="BorderThickness" Value="1,1,0,1" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter TargetName="Bd" Property="BorderThickness" Value="0,1,1,1" />
                        </Trigger>
                        <!--<MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                                <Condition Property="TabStripPlacement" Value="Top" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" Value="-2,-2,-2,-1" />
                            <Setter TargetName="Content" Property="Margin" Value="0,0,0,1" />
                        </MultiTrigger>-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                                <Condition Property="TabStripPlacement" Value="Bottom" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" Value="-2,-1,-2,-2" />
                            <Setter TargetName="Content" Property="Margin" Value="0,1,0,0" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                                <Condition Property="TabStripPlacement" Value="Left" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" Value="-2,-2,-1,-2" />
                            <Setter TargetName="Content" Property="Margin" Value="0,0,1,0" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                                <Condition Property="TabStripPlacement" Value="Right" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" Value="-1,-2,-2,-2" />
                            <Setter TargetName="Content" Property="Margin" Value="1,0,0,0" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Bd" Property="Background" Value="#ff303030" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="#ff303030" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                        <EventTrigger RoutedEvent="LostFocus" />
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>