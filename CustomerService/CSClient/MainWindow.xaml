<Window x:Class="CSClient.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:imuc="clr-namespace:CSClient.Views.Controls"
        xmlns:imc="clr-namespace:IMCustomControls;assembly=IMCustomControls"
        xmlns:viewUnit="clr-namespace:CSClient.Views.Panels"
        xmlns:cv="clr-namespace:CSClient.Converter"
        FontFamily="微软雅黑"
        WindowStyle="None"
        AllowsTransparency="True"
        Background="Transparent"
        WindowStartupLocation="CenterScreen"
        AllowDrop="True"
        mc:Ignorable="d"
        Height="580"
        Width="880"
        MinWidth="720"
        MinHeight="520"
        Title="{Binding MainTitle,Mode=OneWay}">
    <Window.Resources>
        <cv:BoolConvertVisibility x:Key="btv" />
        <cv:HeadImgConvter x:Key="htc" />
        <cv:ReverseBoolConvertVisibility x:Key="rbtv" />
        <cv:UnReadMessageCountConverter x:Key="unreadMsg" />
        <cv:NullToVisibilityConverter x:Key="nullToVisibility" />
        <Style x:Key="CurrentUserStyle"
               TargetType="{x:Type ToggleButton}">
            <Setter Property="Width"
                    Value="40" />
            <Setter Property="Height"
                    Value="40" />
            <Setter Property="Cursor"
                    Value="Hand" />
            <Setter Property="FocusVisualStyle"
                    Value="{x:Null}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid>
                            <ContentPresenter />
                            <Ellipse x:Name="elp"
                                     Fill="Black"
                                     Opacity="0.5"
                                     Visibility="Collapsed" />
                            <Image x:Name="GridNetIcon"
                                   Width="15"
                                   Height="15"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   Source="/IMAssets;component/Images/network_error.png"
                                   Visibility="Collapsed" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseDirectlyOver"
                                     Value="False">
                                <Setter Property="IsChecked"
                                        Value="False" />
                            </Trigger>
                            <Trigger Property="IsTabStop"
                                     Value="False">
                                <Setter TargetName="elp"
                                        Property="Visibility"
                                        Value="Visible" />
                                <Setter TargetName="GridNetIcon"
                                        Property="Visibility"
                                        Value="Visible" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TxtSearchStyle"
               TargetType="{x:Type TextBox}">
            <Setter Property="Height"
                    Value="28" />
            <Setter Property="Foreground"
                    Value="{StaticResource DarkForeground}" />
            <Setter Property="BorderBrush"
                    Value="{StaticResource CommonBorderBrush}" />
            <Setter Property="BorderThickness"
                    Value="1" />
            <Setter Property="FontSize"
                    Value="12" />
            <Setter Property="Margin"
                    Value="10,1" />
            <Setter Property="Background"
                    Value="White" />
            <Setter Property="TextWrapping"
                    Value="Wrap" />
            <Setter Property="ContextMenu">
                <Setter.Value>
                    <ContextMenu>
                        <MenuItem Header="复制"
                                  Command="Copy" />
                        <MenuItem Header="剪切"
                                  Command="Cut" />
                        <MenuItem Header="粘贴"
                                  Command="Paste" />
                    </ContextMenu>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate  TargetType="{x:Type TextBox}">
                        <Border x:Name="border"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="True">
                            <Grid Margin="5,2"
                                  VerticalAlignment="Center">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Image Width="12"
                                       Height="11"
                                       Margin="0,0,0,0"
                                       Source="{StaticResource GlobalsearchIcon}" />
                                <ScrollViewer Grid.Column="1"
                                              x:Name="PART_ContentHost"
                                              Style="{x:Null}"
                                              Focusable="False"
                                              HorizontalScrollBarVisibility="Hidden"
                                              VerticalScrollBarVisibility="Hidden" />
                                <ContentControl Grid.Column="1"
                                                Margin="4,0,0,0"
                                                x:Name="PART_Tag"
                                                Content="{TemplateBinding Tag}"
                                                TextElement.Foreground="#FFAAAAAA"
                                                IsHitTestVisible="False"
                                                Visibility="Collapsed" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled"
                                     Value="False">
                                <Setter Property="Opacity"
                                        TargetName="border"
                                        Value="0.56" />
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused"
                                     Value="True">
                                <Setter Property="Background"
                                        Value="White" />
                            </Trigger>
                            <Trigger Property="IsFocused"
                                     Value="True"></Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Text"
                                               Value="" />
                                    <Condition Property="IsFocused"
                                               Value="False" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Visibility"
                                        TargetName="PART_Tag"
                                        Value="Visible" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Text"
                                               Value="{x:Null}" />
                                    <Condition Property="IsFocused"
                                               Value="False" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Visibility"
                                        TargetName="PART_Tag"
                                        Value="Visible" />
                            </MultiTrigger>
                            <!--<Trigger Property="IsTabStop" Value="False">
                            <Setter Property="Visibility" TargetName="PART_Tag" Value="Collapsed" />
                        </Trigger>-->
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DeleteButton"
               TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Image Width="14"
                                   Height="14"
                                   Source="{StaticResource ClearKeywordIcon}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver"
                                     Value="true">
                                <!--<Setter TargetName="rectangle" Property="Opacity" Value="0.7">
                                </Setter>-->
                            </Trigger>
                            <Trigger Property="IsPressed"
                                     Value="true">
                                <!--<Setter TargetName="rectangle" Property="Opacity" Value="1">
                                </Setter>-->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="LogoutButtonStyle"
               TargetType="{x:Type Button}">
            <Setter Property="Width"
                    Value="14" />
            <Setter Property="Height"
                    Value="14" />
            <Setter Property="Margin"
                    Value="2" />
            <Setter Property="Cursor"
                    Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ContentControl}">
                        <Grid>
                            <Image x:Name="img"
                                   Source="/CSClient;component/Icons/exit.png" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ToggleButtonTemplate"
                         TargetType="{x:Type ToggleButton}">
            <Grid x:Name="grid"
                  Background="Transparent"
                  Cursor="Hand">
                <Border IsHitTestVisible="False"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                <StackPanel Orientation="Horizontal"
                            Margin="5,0"
                            VerticalAlignment="Center">
                    <TextBlock x:Name="tb"
                               Text="{Binding Desc}"
                               FontSize="12"
                               Foreground="#000000"
                               VerticalAlignment="Center" />
                    <Image Width="13"
                           Height="13"
                           Margin="2,0"
                           Source="{Binding Icon}"
                           VerticalAlignment="Center" />
                </StackPanel>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsChecked"
                         Value="true">
                    <Setter TargetName="grid"
                            Property="Background"
                            Value="#FFFFFF" />
                    <Setter TargetName="tb"
                            Property="Foreground"
                            Value="#666666" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </Window.Resources>
    <Grid x:Name="gridLayout"
          Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="20" />
            <RowDefinition Height="40" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="60" />
            <ColumnDefinition Width="250" />
            <ColumnDefinition Width="1" />
            <ColumnDefinition />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <Rectangle Grid.RowSpan="10"
                   Grid.ColumnSpan="10"
                   Effect="{StaticResource CommonEffect}"
                   Fill="#FFFFFF" />
        <Rectangle x:Name="rectLeft"
                   Grid.RowSpan="3"
                   Cursor="ScrollAll"
                   Fill="#4A4848"
                   MouseLeftButtonDown="rect_MouseLeftButtonDown" />
        <Rectangle Fill="#F9FBFF"
                   Grid.Column="1"
                   Grid.RowSpan="3" />
        <ToggleButton x:Name="img"
                      Style="{StaticResource CurrentUserStyle}"
                      IsTabStop="{Binding LoginUser.IsOnline}"
                      Grid.RowSpan="2"
                      VerticalAlignment="Bottom">
            <Grid>
                <Ellipse>
                    <Ellipse.Fill>
                        <ImageBrush x:Name="loginICON"
                                    ImageSource="{Binding LoginUser.User.HeadImg,Mode=OneWay,Converter={StaticResource htc},ConverterParameter=90}" />
                    </Ellipse.Fill>
                </Ellipse>
            </Grid>
        </ToggleButton>
        <DockPanel Grid.Row="2"
                   Margin="0,30,0,0"
                   ContentElement.PreviewMouseLeftButtonDown="DockPanel_PreviewMouseLeftButtonDown">
            <DockPanel.Resources>
                <Style TargetType="{x:Type imc:IconStateButton}">
                    <Setter Property="DockPanel.Dock"
                            Value="Top" />
                    <Setter Property="Width"
                            Value="22" />
                    <Setter Property="Height"
                            Value="22" />
                    <Setter Property="Margin"
                            Value="0,0,0,28" />
                </Style>
            </DockPanel.Resources>
            <imc:IconStateButton x:Name="BtnMessage"
                                 ToolTip="消息"
                                 Command="{Binding NaviCommand}"
                                 CommandParameter="{Binding ChatListVM}"
                                 IsChecked="{Binding ChatListVM.IsChecked,Mode=TwoWay}"
                                 IconNormal="/IMAssets;component/Images/msg_normal.png"
                                 IconMouseOver="/IMAssets;component/Images/msg_mouseover.png"
                                 IconChecked="/IMAssets;component/Images/msg_checked.png">
                <Label Style="{StaticResource AppendLabelStyle}"
                       HorizontalAlignment="Right"
                       VerticalAlignment="Top"
                       Content="{Binding TotalUnReadCount, Converter={StaticResource unreadMsg},Mode=OneWay}" />
            </imc:IconStateButton>
            <imc:IconStateButton x:Name="BtnOfflineMessage"
                                 ToolTip="离线消息"
                                 Command="{Binding NaviCommand}"
                                 CommandParameter="{Binding HisChatListVM}"
                                 IsChecked="{Binding HisChatListVM.IsChecked,Mode=TwoWay}"
                                 IconNormal="/CSClient;component/Images/mjd_unselected.png"
                                 IconMouseOver="/CSClient;component/Images/mjd_cut_in.png"
                                 IconChecked="/CSClient;component/Images/mjb_off_line.png">
                <!--<Label Style="{StaticResource AppendLabelStyle}" HorizontalAlignment="Right" VerticalAlignment="Top" Content="{Binding TotalUnReadCount, Converter={StaticResource unreadMsg},Mode=OneWay}" />-->
            </imc:IconStateButton>
            <imc:IconStateButton x:Name="BtnHistoryMessage"
                                 ToolTip="历史消息记录"
                                 Command="{Binding NaviCommand}"
                                 CommandParameter="{Binding ChatHistoryListVM}"
                                 IsChecked="{Binding ChatHistoryListVM.IsChecked,Mode=TwoWay}"
                                 IconNormal="/CSClient;component/Images/hismsg_normalIcon.png"
                                 IconMouseOver="/CSClient;component/Images/hismsg_mouseovericon.png"
                                 IconChecked="/CSClient;component/Images/hismsg_selectedIcon.png">
                <!--<Label Style="{StaticResource AppendLabelStyle}" HorizontalAlignment="Right" VerticalAlignment="Top" Content="{Binding TotalUnReadCount, Converter={StaticResource unreadMsg},Mode=OneWay}" />-->
            </imc:IconStateButton>
            <imc:IconStateButton x:Name="BtnSet"
                                 ToolTip="更多"
                                 VerticalAlignment="Bottom"
                                 Command="{Binding NaviCommand}"
                                 CommandParameter="{Binding SettingListVM}"
                                 IsChecked="{Binding SettingListVM.IsChecked,Mode=TwoWay}"
                                 IconNormal="/IMAssets;component/Images/setup_normal.png"
                                 IconMouseOver="/IMAssets;component/Images/setup_mouseover.png"
                                 IconChecked="/IMAssets;component/Images/setup_checked.png"></imc:IconStateButton>
        </DockPanel>
        <Rectangle x:Name="rectTop"
                   Cursor="ScrollAll"
                   Grid.RowSpan="2"
                   Grid.Column="1"
                   Fill="#F9FBFF"
                   MouseLeftButtonDown="rect_MouseLeftButtonDown" />
        <Rectangle x:Name="rectTop2"
                   Cursor="ScrollAll"
                   Grid.RowSpan="2"
                   Grid.Column="2"
                   Grid.ColumnSpan="3"
                   Fill="#FFFFFF"
                   MouseLeftButtonDown="rect_MouseLeftButtonDown" />
        <Rectangle x:Name="rectTemp"
                   Grid.Row="1"
                   Grid.Column="1"
                   Margin="45,0,10,0" />
        <!--<Grid>
                <Border CornerRadius="12" Background="#DDE3EE" Width="{Binding ActualWidth, ElementName=rectTemp}"
                        Visibility="{Binding IsChecked, ElementName=btnSearch,Converter={StaticResource btv}}" Margin="-8,0,-40,0" />
                <TextBox x:Name="tbSearch" Text="{Binding SearchKey,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Tag="{Binding SearchTip,Mode=OneWay}"
                         Style="{StaticResource TextBoxTagStyle}" Background="Transparent" BorderThickness="0" Margin="3,-2"
                         MaxLength="11" />
            </Grid>-->
        <!--<ToggleButton x:Name="btnSearch" Style="{StaticResource SearchButtonStyle}" Margin="15,0,0,0" />-->
        <Grid  Grid.Row="1"
               Grid.Column="1"
               Visibility="{Binding IsChecked, ElementName=BtnSet,Converter={StaticResource rbtv}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="60" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <!--State-->
            <ToggleButton x:Name="btnState"
                          Margin="5,0"
                          VerticalAlignment="Center"
                          Height="21"
                          DataContext="{Binding CurrentCSState}"
                          Template="{StaticResource ToggleButtonTemplate}" />
            <!--Search Box-->
            <Grid Background="#F9FBFF"
                  Grid.Column="1"
                  Height="24"
                  VerticalAlignment="Center">
                <Border CornerRadius="12"
                        x:Name="border"
                        Background="#EFF2F7"
                        BorderThickness="0"
                        Margin="0,0,5,0" />
                <TextBox x:Name="tbSearch"
                         TextWrapping="NoWrap"
                         Text="{Binding SearchKey,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                         Tag="{Binding SearchTip,Mode=OneWay}"
                         Style="{StaticResource TxtSearchStyle}"
                         BorderThickness="0"
                         Margin="16,-2,25,-2"
                         MaxLength="20"
                         Background="Transparent" />
                <Button Style="{StaticResource DeleteButton}"
                        HorizontalAlignment="Right"
                        Margin="0,0,8,0"
                        Click="ClearSearch_Click"
                        Visibility="{Binding SearchKey,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay,Converter={StaticResource nullToVisibility} }" />
            </Grid>
        </Grid>
        <ContentControl x:Name="bdListView"
                        Grid.Column="1"
                        Grid.Row="2"
                        Content="{Binding ListViewModel.View,Mode=OneWay}"
                        FocusVisualStyle="{x:Null}"
                        Margin="0,1" />
        <ContentControl x:Name="bdContentView"
                        Grid.Column="3"
                        Grid.RowSpan="3"
                        Margin="0,-6,0,0"
                        Content="{Binding ListViewModel.SelectedItem.View,Mode=OneWay}"
                        FocusVisualStyle="{x:Null}" />
        <DockPanel Visibility="Collapsed"
                   LastChildFill="True"
                   Grid.Row="0"
                   Grid.RowSpan="2"
                   Grid.Column="0"
                   Background="#EA882C">
            <Button Style="{StaticResource LogoutButtonStyle}"
                    Command="{Binding LogoutCommand}"
                    ToolTip="退出登录"
                    DockPanel.Dock="Right"
                    Margin="20,0,12,0" />
            <TextBlock Text="{Binding LoginUser.User.PhoneNumber,Mode=OneWay}"
                       VerticalAlignment="Center"
                       Foreground="White"
                       TextTrimming="CharacterEllipsis" />
        </DockPanel>
        <StackPanel x:Name="stkpState"
                    Grid.RowSpan="2"
                    Grid.Column="3"
                    Orientation="Horizontal"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Top"
                    Panel.ZIndex="100">
            <Button  x:Name="btnMin"
                     Click="btnMin_Click"
                     Style="{StaticResource MinButtonStyle}" />
            <ToggleButton x:Name="btnMax"
                          Style="{StaticResource MaxButtonStyle}"
                          Click="btnMax_Click" />
            <Button  x:Name="btnClose"
                     Click="btnClose_Click"
                     Style="{StaticResource CloseButtonStyle}" />
        </StackPanel>
        <imc:TopMostPopup x:Name="popupState"
                          PlacementTarget="{Binding ElementName=btnState}"
                          Placement="Bottom"
                          StaysOpen="False"
                          AllowsTransparency="True"
                          IsOpen="{Binding IsChecked,ElementName=btnState,Mode=TwoWay}">
            <ListBox Background="Red" 
                     BorderThickness="0"
                     Width="50"
                     SelectionMode="Single"
                     ItemsSource="{Binding CSStates}">
                <ListBox.ItemContainerStyle>
                    <Style TargetType="{x:Type ListBoxItem}">
                        <EventSetter Event="PreviewMouseLeftButtonDown"
                                     Handler="ListBoxItem_MouseLeftButtonDown" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Grid x:Name="grid"
                                          Background="Transparent">
                                        <Border />
                                        <StackPanel Orientation="Horizontal"
                                                    Margin="4,0,6,0"
                                                    VerticalAlignment="Center">
                                            <TextBlock x:Name="tb"
                                                       Text="{Binding Desc}"
                                                       FontSize="12"
                                                       Foreground="#666666"
                                                       VerticalAlignment="Center" />
                                            <Image Width="13"
                                                   Height="13"
                                                   Source="{Binding Icon}"
                                                   VerticalAlignment="Center" />
                                        </StackPanel>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver"
                                                 Value="true">
                                            <Setter TargetName="grid"
                                                    Property="Background"
                                                    Value="#F4F4F4" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListBox.ItemContainerStyle>
            </ListBox>
        </imc:TopMostPopup>
        <imc:TopMostPopup x:Name="ppBusinessCard"
                          PlacementTarget="{Binding ElementName=gridLayout}"
                          Placement="Mouse"
                          Width="320"
                          HorizontalOffset="-10"
                          VerticalOffset="-25"
                          Height="270"
                          AllowsTransparency="True"
                          StaysOpen="False"
                          IsOpen="{Binding IsOpenBusinessCard}">
            <Grid>
                <Border  Background="{StaticResource AppendBackground}"
                         CornerRadius="5"
                         BorderThickness="10"
                         Padding="10"
                         Effect="{StaticResource CommonEffect}" />
                <Border  CornerRadius="5"
                         BorderThickness="10"
                         Padding="10">
                    <imuc:UserCard DataContext="{Binding DataContext.UserBusinessCard,ElementName=gridLayout}" />
                </Border>
            </Grid>
        </imc:TopMostPopup>
        <Grid Grid.RowSpan="10"
              Grid.ColumnSpan="10"
              Thumb.DragDelta="Size_DragDelta"
              Margin="-5">
            <Grid.Resources>
                <Style TargetType="{x:Type Thumb }">
                    <Setter Property="FocusVisualStyle"
                            Value="{x:Null}" />
                    <Setter Property="Background"
                            Value="Transparent" />
                    <Setter Property="Focusable"
                            Value="True" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Thumb}">
                                <Rectangle Fill="{TemplateBinding Background}" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Grid.Resources>
            <Thumb Width="10"
                   HorizontalAlignment="Left"
                   Uid="Left"
                   Cursor="SizeWE" />
            <Thumb Width="10"
                   HorizontalAlignment="Right"
                   Uid="Right"
                   Cursor="SizeWE" />
            <Thumb Height="10"
                   VerticalAlignment="Top"
                   Uid="Top"
                   Cursor="SizeNS" />
            <Thumb Height="10"
                   VerticalAlignment="Bottom"
                   Uid="Bottom"
                   Cursor="SizeNS" />
            <Thumb Width="10"
                   Height="10"
                   HorizontalAlignment="Left"
                   VerticalAlignment="Top"
                   Uid="LeftTop"
                   Cursor="SizeNWSE" />
            <Thumb Width="10"
                   Height="10"
                   HorizontalAlignment="Right"
                   VerticalAlignment="Top"
                   Uid="RightTop"
                   Cursor="SizeNESW" />
            <Thumb Width="10"
                   Height="10"
                   HorizontalAlignment="Left"
                   VerticalAlignment="Bottom"
                   Uid="LeftBottom"
                   Cursor="SizeNESW" />
            <Thumb Width="10"
                   Height="10"
                   HorizontalAlignment="Right"
                   VerticalAlignment="Bottom"
                   Uid="RightBottom"
                   Cursor="SizeNWSE" />
        </Grid>
        <Rectangle  Style="{StaticResource LineVRectStyle}"
                    Grid.Column="2"
                    Grid.RowSpan="3" />
    </Grid>
</Window>