<Window x:Class="CSClient.Views.Controls.ClipWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:list="clr-namespace:System.Collections;assembly=mscorlib"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"  
        WindowStyle="None"
        ResizeMode="NoResize"
        ShowInTaskbar="False"
        WindowState="Maximized" AllowsTransparency="True" Background="{x:Null}"
        Title="ClipWindow" Height="300" Width="500">
    <Window.Resources>
        <list:ArrayList x:Key="SizeItems">
            <sys:Int32>3</sys:Int32>
            <sys:Int32>6</sys:Int32>
            <sys:Int32>10</sys:Int32>
            <sys:Int32>15</sys:Int32> 
        </list:ArrayList>
        <list:ArrayList x:Key="ColorItems"> 
            <SolidColorBrush Color="Black"/>
            <SolidColorBrush Color="Red"/>
            <SolidColorBrush Color="Orange"/>
            <SolidColorBrush Color="Yellow"/>
            <SolidColorBrush Color="Green"/>
            <SolidColorBrush Color="Blue"/>
            <SolidColorBrush Color="White"/>
            <SolidColorBrush Color="Cyan"/>
            <SolidColorBrush Color="Indigo"/>
            <SolidColorBrush Color="DarkViolet"/>
            <SolidColorBrush Color="	GoldEnrod"/>
            <SolidColorBrush Color="	HotPink"/>
            <SolidColorBrush Color="Lime"/>
            <SolidColorBrush Color="DarkBlue"/>
        </list:ArrayList>
    </Window.Resources>
    <Grid x:Name="gridLayout">
        <Canvas x:Name="canvasMain"> 
            <InkCanvas x:Name="inkCanvas" Background="Transparent" Visibility="Collapsed" StrokeCollected="inkCanvas_StrokeCollected"
                       Canvas.Left="{Binding ElementName=rectClip,Path=Rect.X}"
                       Canvas.Top="{Binding ElementName=rectClip,Path=Rect.Y}"
                   Width="{Binding ElementName=rectClip,Path=Rect.Width}"
                    Height="{Binding ElementName=rectClip,Path=Rect.Height}">
                <InkCanvas.DefaultDrawingAttributes>
                    <DrawingAttributes Width="5" Height="5" Color="Red"/>
                </InkCanvas.DefaultDrawingAttributes>
            </InkCanvas>
        </Canvas>  
        <Rectangle x:Name="rect" Fill="#66333333" >
            <Rectangle.Clip>
                <CombinedGeometry x:Name="cbGeo" GeometryCombineMode="Exclude" >
                    <CombinedGeometry.Geometry1>
                        <RectangleGeometry x:Name="rectFull" Rect="0,0,500,500"/>
                    </CombinedGeometry.Geometry1>
                    <CombinedGeometry.Geometry2>
                        <RectangleGeometry x:Name="rectClip" Rect="0,70,300,100"/>
                    </CombinedGeometry.Geometry2> 
                </CombinedGeometry>
            </Rectangle.Clip>
        </Rectangle>
        <Border x:Name="bdThumb">

        </Border>
        <Canvas>
            <Grid x:Name="gridmagnifier" Height="70"  Width="210"  IsHitTestVisible="False">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="70"/>
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Rectangle StrokeThickness="1" Stroke="Black" Grid.ColumnSpan="2" Panel.ZIndex="99"/>
                <Rectangle x:Name="magnifierRectangle"  x:FieldModifier="public">
                    <Rectangle.Fill>
                        <VisualBrush x:Name="visualBrush" x:FieldModifier="public" ViewboxUnits="Absolute" Viewbox="0,0,40,40"
                         ViewportUnits="RelativeToBoundingBox" Viewport="0,0,1,1"/>
                    </Rectangle.Fill>
                </Rectangle>
                <Path Stroke="#AA4CA4F4" StrokeThickness="1" Data="M10,35 60,35 M35,10 35,60"/>
                <TextBlock x:Name="tbUnSelection" Grid.Column="1" Background="#AA000000" Foreground="White" FontSize="13" 
                          Padding="5,10" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"   >
                    <Run Text="按住左键框选截图区域"/>
                     <LineBreak />
                    <Run Text="单击右键或Esc退出"/>
                     <LineBreak />
                    <!--<Run  x:Name="runRGB" Text="RGB:(255, 255, 255)"/>--> 
                     <Run  x:Name="runSize0" Text="1920×1080"/>
                </TextBlock>

                <TextBlock x:Name="tbSelection" Grid.Column="1" Background="#AA000000" Foreground="White" FontSize="13" 
                          Padding="5,10" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Visibility="Collapsed"  >
                     <Run  x:Name="runSize" Text="1920×1080"/> 
                     <LineBreak />
                    <!--<Run   Text="{Binding Text, ElementName=runRGB}"/>--> 
                    <LineBreak />
                    <Run Text="双击可快速完成截图"/>
                </TextBlock>
            </Grid>

            <StackPanel x:Name="stkpMenu" Orientation="Horizontal" Background="White" Canvas.Left="160" Canvas.Top="170"
                    ButtonBase.Click="stkpMenu_Click">
                <StackPanel.Resources>
                    <Style TargetType="{x:Type RadioButton}">
                        <Setter Property="Background" Value="Gray"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="Width" Value="28"/>
                        <Setter Property="Height" Value="28"/>
                        <Setter Property="BorderBrush" Value="Gray"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type RadioButton}">
                                    <Border x:Uid="stkpBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                        <Ellipse  Width="{TemplateBinding Uid}" Height="{TemplateBinding Uid}" Fill="{TemplateBinding Foreground}"  
                                                 />
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsChecked" Value="true">
                                            <Setter Property="Background" Value="DarkGray"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </StackPanel.Resources>
                <ToggleButton x:Name="tbtnPen" Style="{StaticResource RectPathButtonStyle}" Uid="Pen" ToolTip="笔刷工具" Tag="{StaticResource GeoPen}" />
                <Rectangle Width="15" Height="4" Stroke="Gray" VerticalAlignment="Bottom" Margin="-30,0,0,1" Fill="{Binding SelectedItem,ElementName=listColors}"/>


                <RepeatButton x:Name="rbtnBackout" Interval="100" Style="{StaticResource RectPathButtonStyle}" Tag="{StaticResource GeoBackout}" Uid="Backout" ToolTip="撤销" IsEnabled="False" />

                <Button Style="{StaticResource RectPathButtonStyle}" Uid="Save" ToolTip="保存图片" Tag="{StaticResource GeoDownload}"/>
                <Button Style="{StaticResource RectPathButtonStyle}" Padding="7"  Uid="Cancel" ToolTip="退出截屏" Tag="{StaticResource GeoFork}"/>
                <Button Style="{StaticResource RectPathButtonStyle}" Padding="7" Uid="OK" ToolTip="完成截屏" Tag="{StaticResource GeoHook}" />
            </StackPanel> 
        </Canvas>

        <Popup IsOpen="{Binding IsChecked, ElementName=tbtnPen}" StaysOpen="True" Placement="Bottom" PlacementTarget="{Binding ElementName=tbtnPen}">
            <Grid  Width="112" Height="60">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <ListBox x:Name="listSizes"   Style="{x:Null}" SelectionChanged="listSizes_SelectionChanged" Background="Gray"
                            ItemsSource="{StaticResource SizeItems}"  Padding="0" SelectedIndex="1" BorderThickness="0">
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="{x:Type ListBoxItem}">
                            <Setter Property="Background" Value="Gray"/>
                            <Setter Property="BorderBrush" Value="Gray"/>
                            <Setter Property="Foreground" Value="{Binding SelectedItem,ElementName=listColors}"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                        <Border Background="{TemplateBinding Background}"  BorderBrush="{TemplateBinding BorderBrush}"  BorderThickness="{TemplateBinding BorderThickness}">
                                            <Ellipse Width="{Binding}" Height="{Binding}" Fill="{TemplateBinding Foreground}"/>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="Selector.IsSelected" Value="true">
                                                <Setter Property="Background" Value="LightGray"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListBox.ItemContainerStyle>
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate >
                            <UniformGrid Rows="1"/>
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                </ListBox>
                <ListBox x:Name="listColors"   Style="{x:Null}" SelectionChanged="listColors_SelectionChanged"  Grid.Row="1"  Background="Gray"
                            ItemsSource="{StaticResource ColorItems}"  Padding="0" SelectedIndex="1" BorderThickness="0">
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="{x:Type ListBoxItem}">
                            <Setter Property="BorderThickness" Value="0"/>
                            <Setter Property="BorderBrush" Value="Gray"/>
                            <Setter Property="Margin" Value="1,0"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                        <Border Background="{Binding}" BorderBrush="{TemplateBinding BorderBrush}"  BorderThickness="{TemplateBinding BorderThickness}">

                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="Selector.IsSelected" Value="true">
                                                <Setter  Property="BorderThickness" Value="3"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListBox.ItemContainerStyle>
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate >
                            <UniformGrid Rows="2" />
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                </ListBox>
                <Rectangle  Stroke="White" IsHitTestVisible="False"/>
                <Rectangle  Stroke="White" Grid.Row="1" Margin="0,-1,0,0" IsHitTestVisible="False"/>
            </Grid>
        </Popup>
    </Grid>
</Window>
