<UserControl x:Class="CSClient.Views.Panels.SetFastReply"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:CSClient.Views.Panels"
             mc:Ignorable="d" 
             d:DesignHeight="600" d:DesignWidth="600">

    <UserControl.Resources>

        <Style TargetType="TextBlock">
            <Setter Property="FontFamily" Value="PingFangSC"/>
            <Setter Property="FontWeight" Value="Regular"/>
        </Style>

        <ControlTemplate x:Key="FilletTextBox" TargetType="{x:Type TextBox}">
            <Border BorderBrush="#CCCCCC" Background="Transparent" BorderThickness="1" CornerRadius="4">
                <ScrollViewer x:Name="PART_ContentHost" VerticalAlignment="Center"/>
            </Border>
        </ControlTemplate>

        <Style TargetType="{x:Type ListBoxItem}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border Background="{TemplateBinding Background}"  SnapsToDevicePixels="true" 
                                        BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter VerticalAlignment="Center"  />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" Value="Transparent"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Background" Value="Transparent"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <DataTemplate x:Key="FastReplyDataTemplate">
            <ContentControl>
                <DockPanel LastChildFill="True" Margin="0,0,0,8">
                    <Grid x:Name="gridAdd" DockPanel.Dock="Right" ToolTip="添加" Visibility="Visible" VerticalAlignment="Center" Cursor="Hand" MouseLeftButtonUp="gridAdd_MouseLeftButtonUp">
                        <Image Source="/IMAssets;component/Images/addmember.png" Width="24" Height="24" Margin="0,0,32,0"/>
                    </Grid>
                    <Grid x:Name="gridRemove" DockPanel.Dock="Right" ToolTip="删除" Visibility="Visible" VerticalAlignment="Center" Cursor="Hand" MouseLeftButtonUp="gridRemove_MouseLeftButtonUp">
                        <Image Source="/IMAssets;component/Images/deletemember.png" Width="24" Height="24" Margin="10,0"/>
                    </Grid>
                    <TextBox MinHeight="30" MaxHeight="70" Template="{StaticResource FilletTextBox}" HorizontalAlignment="Stretch" VerticalContentAlignment="Center" Height="auto" Text="{Binding Content}" Margin="0,0,0,0" AcceptsReturn="True" TextWrapping="Wrap"/>
                </DockPanel>
            </ContentControl>
        </DataTemplate>

        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Grid Height="25">
                <Border Background="White" Opacity="0" Cursor="Hand"/>
                <Path x:Name="Arrow" Margin="0,0,10,0"  Data="M 0 0  6 6 12 0 Z"  VerticalAlignment="Center" HorizontalAlignment="Right" Stretch="None" Fill="#999999" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsChecked" Value="true">
                    <Setter TargetName="Arrow" Property="RenderTransform">
                        <Setter.Value>
                            <RotateTransform  CenterX="6" CenterY="3" Angle="180"></RotateTransform>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="ListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}" >
                        <Border Height="30" x:Name="Border" MouseLeftButtonDown="Border_MouseLeftButtonDown" Background="Transparent" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <DockPanel LastChildFill="True" VerticalAlignment="Center" Background="Transparent">
                                <Button x:Name="btnRemove" Click="btnRemove_Click" Style="{StaticResource ForkButtonStyle}" DockPanel.Dock="Right" Margin="10,0,5,0"/>
                                <TextBlock Text="{Binding TypeName}" FontSize="12" VerticalAlignment="Center" TextTrimming="CharacterEllipsis"/>
                            </DockPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#CCCCCC"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--ComBoBox项选中背景色-->
        <SolidColorBrush x:Key="ComboBoxSelectdBackground" Color="#ff8c69"/>
        <!--ComBoBox项鼠标经过背景色-->
        <SolidColorBrush x:Key="ComboBoxMouseOverBackground" Color="#ff3030"/>
        <!--ComBoBox项选中前景色-->
        <SolidColorBrush x:Key="ComboBoxSelectedForeground" Color="White"/>
        <!--ComBoBox项鼠标经过前景色-->
        <SolidColorBrush x:Key="ComboBoxMouseOverForegrond" Color="White"/>
        <Style TargetType="{x:Type ComboBox}">
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="ComboBoxItem">
                        <Setter Property="Height" Value="20"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate  TargetType="{x:Type ComboBoxItem}">
                                    <Grid Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
                                        <Border x:Name="_borderbg" Background="Transparent"/>
                                        <TextBlock Margin="3 0 3 0" VerticalAlignment="Center" x:Name="_txt" Foreground="#333" Text="{Binding Content,RelativeSource={RelativeSource TemplatedParent}}"/>
                                        <Border x:Name="_border" Background="White" Opacity="0"/>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSelected" Value="true">
                                            <Setter TargetName="_borderbg" Property="Background" Value="{StaticResource ComboBoxSelectdBackground}" />
                                            <Setter TargetName="_txt" Property="Foreground" Value="{StaticResource ComboBoxSelectedForeground}"/>
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsSelected" Value="false"/>
                                                <Condition Property="IsMouseOver" Value="true"/>
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="_borderbg" Property="Background" Value="{StaticResource ComboBoxMouseOverBackground}" />
                                            <Setter TargetName="_txt" Property="Foreground" Value="{StaticResource ComboBoxMouseOverForegrond}"/>
                                        </MultiTrigger>

                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="0.7*"/>
                                <ColumnDefinition Width="0.3*" MaxWidth="30"/>
                            </Grid.ColumnDefinitions>
                            <Border  Grid.Column="0" Grid.ColumnSpan="2" Background="Transparent" BorderThickness="1" BorderBrush="#CCCCCC" CornerRadius="4"/>
                            <ContentPresenter HorizontalAlignment="Left" Margin="3,3,0,3" x:Name="ContentSite" VerticalAlignment="Center" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" IsHitTestVisible="False"/>

                            <!--ToggleButton 已数据绑定到 ComboBox 本身以切换 IsDropDownOpen-->
                            <ToggleButton Grid.Column="0"  Grid.ColumnSpan="2" Template="{StaticResource ComboBoxToggleButton}" x:Name="ToggleButton" Focusable="false" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"/>
                            <!--必须将 TextBox 命名为 PART_EditableTextBox，否则 ComboBox 将无法识别它-->
                            <TextBox Visibility="Hidden" BorderThickness="0"   Margin="2 0 0 0" x:Name="PART_EditableTextBox"  VerticalAlignment="Center" Focusable="True" Background="Transparent" IsReadOnly="{TemplateBinding IsReadOnly}"/>

                            <!--Popup 可显示 ComboBox 中的项列表。IsOpen 已数据绑定到通过 ComboBoxToggleButton 来切换的 IsDropDownOpen-->
                            <Popup IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" x:Name="Popup" Focusable="False" AllowsTransparency="True" PopupAnimation="Slide">
                                <Grid MaxHeight="150" MinWidth="{TemplateBinding ActualWidth}" x:Name="DropDown" SnapsToDevicePixels="True">
                                    <Border x:Name="DropDownBorder"  BorderBrush="#e8e8e8" BorderThickness="1 0 1 1"/>
                                    <!--<ScrollViewer Margin="1"  SnapsToDevicePixels="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" CanContentScroll="True">
                                        -->
                                    <!--StackPanel 用于显示子级，方法是将 IsItemsHost 设置为 True-->
                                    <!--
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" Background="White"/>
                                    </ScrollViewer>-->
                                    <ListBox x:Name="PART_ListBox" Background="White" BorderThickness="1" BorderBrush="#CCCCCC" SelectionMode="Single" ItemsSource="{Binding ItemsSource,RelativeSource={RelativeSource TemplatedParent}}"
                                             ItemTemplate="{TemplateBinding ItemTemplate}" SelectedItem="{Binding SelectedItem,RelativeSource={RelativeSource TemplatedParent}}"
                                             MaxHeight="{TemplateBinding MaxDropDownHeight}" ItemContainerStyle="{StaticResource ListBoxItemStyle}"/>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEditable" Value="true">
                                <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="60"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Border BorderThickness="0,0,0,1" Grid.Row="0" BorderBrush="#CCCCCC">
            <TextBlock Text="编辑快捷回复" Margin="32,28,0,0" Foreground="#333333" FontSize="18" VerticalAlignment="Center"/>
        </Border>

        <Grid Grid.Row="1" Background="#F5F6F7">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="80"/>
            </Grid.RowDefinitions>

            <StackPanel Orientation="Horizontal" Grid.Row="0" Margin="32,21,0,0">
                <TextBlock Text="快捷回复类型" FontSize="14" Foreground="#666666" VerticalAlignment="Center" Margin="0,0,10,0"/>
                <ComboBox x:Name="cmbReplyType" Margin="0,0,0,0" SelectedIndex="0" SelectionChanged="cmbReplyType_SelectionChanged" Width="120" Height="30" ItemsSource="{Binding TypeItems}" IsEditable="False"
                      DisplayMemberPath="TypeName" BorderBrush="Black" SelectedItem="{Binding SelectedType}" VerticalContentAlignment="Center"/>
                <TextBlock Text="新增类型" FontSize="14" Foreground="#666666" VerticalAlignment="Center" Margin="29,0,10,0"/>
                <TextBox x:Name="txtAddTypeName" Foreground="#333333" FontSize="12" Template="{StaticResource FilletTextBox}" MinWidth="20" Width="100" Height="30" MaxLength="50" VerticalContentAlignment="Center"/>
                <Button x:Name="btnAddType" Content="新增" Style="{DynamicResource HightLightButtonStyle}" Height="30" Margin="10,0,0,0" Click="btnAddType_Click"/>
            </StackPanel>

            <StackPanel Orientation="Horizontal" Grid.Row="1" Margin="32,40,0,0">
                <TextBlock Text="回复类型名称" FontSize="14" Foreground="#666666" VerticalAlignment="Center" Margin="0,0,10,0"/>
                <TextBox x:Name="txtEditTypeName" Margin="0,0,0,0" Template="{StaticResource FilletTextBox}" Width="120" Height="30" Text="{Binding SelectedType.TypeName,Mode=OneWay}" VerticalContentAlignment="Center"/>
                <Button x:Name="btnEditType" Content="保存" Style="{DynamicResource HightLightButtonStyle}" Width="60" Height="30" Margin="10,0,0,0" Click="btnEditType_Click"/>
            </StackPanel>

            <Grid Grid.Row="2" Margin="32,10,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="快捷回复内容" FontSize="14" Foreground="#666666" VerticalAlignment="Top" Margin="0,8,10,0" Grid.Column="0"/>
                <ListBox Grid.Column="1" x:Name="list" Cursor="Arrow" ItemsSource="{Binding SelectedType.TypeItems,Mode=OneWay}"
                 ItemTemplate="{StaticResource FastReplyDataTemplate}" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                </ListBox>
            </Grid>

            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Grid.Row="3">
                <Button Content="保存" Height="30" Width="120" Style="{DynamicResource HightLightButtonStyle}" Command="{Binding SaveCommand}"/>
            </StackPanel>

        </Grid>
    </Grid>
</UserControl>
