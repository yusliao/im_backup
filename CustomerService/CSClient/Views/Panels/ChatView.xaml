<UserControl x:Class="CSClient.Views.Panels.ChatView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:CSClient.Views.Panels"
             xmlns:cv="clr-namespace:CSClient.Converter"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"            
             xmlns:imuc="clr-namespace:CSClient.Views.Controls"            
             mc:Ignorable="d" 
             d:DesignHeight="520" d:DesignWidth="500">
    <UserControl.Resources>
        <cv:BoolConvertVisibility x:Key="btv"/>
        <cv:ReverseBoolConvertVisibility x:Key="rbtv"/>
        <cv:MessageToViewConverter x:Key="mtv"/>
        <cv:UnReadMessageCountDisplayConverter x:Key="unreadMsg"/>
    </UserControl.Resources>
    <Grid x:Name="gridLayout" Margin="-2,0,2,0">
        <Grid.RowDefinitions>
            <RowDefinition Height="25"/>
            <RowDefinition Height="40"/>
            <RowDefinition Height="1*" MinHeight="180"/>
            <RowDefinition Height="0*" MinHeight="30"/>
            <RowDefinition  Height="90"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Rectangle x:Name="rectTemp" Grid.RowSpan="6" HorizontalAlignment="Right" Margin="0,6,0,0"/>
        <!--<Rectangle Grid.Row="1"  Style="{StaticResource LineRectStyle}"/>-->
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <TextBox Grid.Column="0"  Margin="30,0,0,0" MaxWidth="150" IsReadOnly="True" BorderThickness="0"
                   Visibility="{Binding Model.IsGroup,Mode=OneWay,Converter={StaticResource rbtv}}" Text="{Binding CustomUserModel.Mobile}" FontSize="{StaticResource LargerFontSize}">
            <!--<Run  Text="{Binding Model.Chat.DisplayName,Mode=OneWay}" FontSize="{StaticResource LargerFontSize}"/>-->
            </TextBox>

            <Grid Grid.Column="1" Margin="10,5,10,0" VerticalAlignment="Center">
                <Grid.Resources>
                    <Style TargetType="TextBlock">
                        <Setter Property="Foreground" Value="#999999"/>
                        <Setter Property="FontSize" Value="11"/>
                    </Style>
                </Grid.Resources>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <TextBox Text="{Binding CustomUserModel.ShopName}"  Grid.Column="0" Foreground="#999999" FontSize="11" Margin="5,0,0,0" Cursor="Hand" IsReadOnly="True" BorderThickness="0">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="PreviewMouseDown">
                            <i:InvokeCommandAction Command="{Binding JumpCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </TextBox>
                <TextBlock Text="{Binding CustomUserModel.AppType}"  Grid.Column="1" Margin="5,0" />
                <TextBlock Text="{Binding CustomUserModel.DeviceName}" Grid.Column="2" Margin="5,0" />
                <TextBlock Text="{Binding CustomUserModel.Address}" Grid.Column="3" Margin="5,0,0,0" MaxWidth="130" TextTrimming="CharacterEllipsis" />
                <TextBlock Text="{Binding CustomUserModel.DeviceType}" Grid.Column="4" Margin="5,0,0,0" />
               
            </Grid>

            <!--<TextBlock x:Name="tbMemberCount" Grid.Row="1" Style="{StaticResource MainTitleStyle}" Cursor="Hand" FontSize="{StaticResource LargerFontSize}"
                    Margin="30,0,0,0">
           <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseLeftButtonUp">
                    <i:InvokeCommandAction Command ="{Binding JumpCommand}" />
                </i:EventTrigger> 
            </i:Interaction.Triggers> 
            <Run  Text="{Binding Model.Chat.DisplayName,Mode=OneWay}"/>(<Run Text="{Binding Model.Chat.Members.Count,Mode=OneWay}"/>)
        </TextBlock>-->

            <!--<Popup x:Name="ppAppend" DataContext="{Binding DataContext,ElementName=gridLayout}" StaysOpen="False" AllowsTransparency="True" 
               PlacementTarget="{Binding ElementName=rectTemp}" Placement="Right" Width="270" VerticalOffset="-10" Opened="ppAppend_Opened">
            <Border x:Name="bdAppendFrame" Effect="{StaticResource CommonEffect}" Padding="0,10,10,10">
                <Border  x:Name="bdAppend" Height="{Binding ActualHeight, ElementName=rectTemp}"  Background="{StaticResource AppendBackground}" Padding="20,40,20,10">
                     
                </Border>
            </Border>
        </Popup>-->

            <!--<Popup x:Name="ppApply" DataContext="{Binding DataContext,ElementName=gridLayout}" StaysOpen="False" AllowsTransparency="True" 
               PlacementTarget="{Binding ElementName=rectTemp}" Placement="Right" Width="270" VerticalOffset="-10" >
            <Border x:Name="bdApplyFrame" Effect="{StaticResource CommonEffect}" Padding="0,10,10,10">
                <Border  x:Name="bdApply" FlowDirection="LeftToRight" Height="{Binding ActualHeight, ElementName=rectTemp}"  Background="{StaticResource AppendBackground}" Padding="10,30,10,10">
                   
                </Border>
            </Border>
        </Popup>-->

            <ToggleButton x:Name="ptbtnAppend" Style="{DynamicResource HightLightButtonReverStyle}" HorizontalAlignment="Right" ClickMode="Press" Grid.Column="2"  Margin="0,0,20,0"
                      Click="ptbtnAppend_Click" Content="快捷回复" Foreground="#666666" Width="70" Height="24" FontSize="12" Cursor="Hand" FocusVisualStyle="{x:Null}" Visibility="{Binding IsHideAppendButton,Converter={StaticResource rbtv}}">
                <!--<ToggleButton.Template>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="Transparent" BorderThickness="1" BorderBrush="#FF999999" CornerRadius="4">
                        <TextBlock Text="快捷回复" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </ToggleButton.Template>-->
            </ToggleButton>
        </Grid>
        <Rectangle x:Name="rectMsgW" Margin="60,0" />
        <imuc:ChatBox x:Name="chatBox" Grid.Row="2" ItemsSource="{Binding Model.Messages,Mode=OneWay}" />

        <StackPanel Orientation="Vertical" HorizontalAlignment="Right" VerticalAlignment="Top" Grid.Row="2">

            <ToggleButton Cursor="Hand" x:Name="btnHistoryMsg" Click="btnHistoryMsg_Click" Content="{Binding UnReadMsgTip}"
                      Margin="0,20,0,0" Visibility="{Binding IsDisplayHistoryMsgButton, Converter={StaticResource btv}}" HorizontalAlignment="Right">
                <ToggleButton.Style>
                    <Style TargetType="{x:Type ToggleButton}">
                        <Setter Property="Cursor" Value="Hand"/>
                        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                        <Setter Property="Background" Value="White"/>
                        <Setter Property="Foreground" Value="#4C68B9"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                    <Border Background="{TemplateBinding Background}" Padding="5" Width="100" Height="30" CornerRadius="15,0,0,15">
                                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center">
                                            <Path Data="M0,0 L5,-5 L10,0 M0,5 L5,0 L10,5" Margin="5,5,10,5" VerticalAlignment="Stretch" Stroke="#4C68B9"/>
                                            <ContentPresenter />
                                        </StackPanel>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter Property="Foreground" Value="{StaticResource HightLightBackground}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ToggleButton.Style>
            </ToggleButton>

            <ToggleButton Cursor="Hand" Content="有人@你" x:Name="btnAt" Click="btnAt_Click" Margin="0,20,0,0" HorizontalAlignment="Right"
                          Visibility="{Binding IsDisplayAtButton, Converter={StaticResource btv}}">
                <ToggleButton.Style>
                    <Style TargetType="{x:Type ToggleButton}">
                        <Setter Property="Cursor" Value="Hand"/>
                        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                        <Setter Property="Background" Value="White"/>
                        <Setter Property="Foreground" Value="Red"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                    <Border Background="{TemplateBinding Background}" Padding="5" Width="70" Height="30" CornerRadius="15,0,0,15">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter Property="Foreground" Value="{StaticResource HightLightBackground}"/>
                                        </Trigger>
                                        <!--<Trigger Property="IsChecked" Value="true">
                                            <Setter Property="Foreground" Value="{StaticResource HightLightBackground}"/>
                                            <Setter Property="Background" Value="{StaticResource AppendBackground}"/>
                                        </Trigger>-->
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ToggleButton.Style>
            </ToggleButton>
        </StackPanel>

        <Rectangle Grid.Row="3" Grid.RowSpan="3"  Fill="White"/>
        <Button x:Name="btnSend" Grid.Row="5" Content="发送" Focusable="False" Command="{Binding SendCommand,Mode=OneWay}"
                CommandParameter="{Binding Document, ElementName=msgEditor}" DockPanel.Dock="Bottom"
                Style="{StaticResource HightLightButtonReverStyle}" HorizontalAlignment="Right" Margin="30,10"/>
        <imuc:MessageEditor x:Name="msgEditor" x:FieldModifier="public" Grid.Row="3" Grid.RowSpan="2"/>
        <StackPanel Grid.Row="3" Height="30" VerticalAlignment="Top" HorizontalAlignment="Right" Orientation="Horizontal"  >
            <Button x:Name="btnClear" Style="{StaticResource RectPathButtonStyle}" Visibility="Collapsed"
                Command="{Binding ClearCommand}"  Focusable="False" ToolTip="清屏" Tag="{StaticResource GeoScreen}"/>
            <ToggleButton x:Name="btnHistory" Checked="btnHistory_Click" ClickMode="Press" ToolTip="消息记录"  Padding="5"
                    IsChecked="{Binding IsOpenHisMsg,Mode=TwoWay}" Style="{StaticResource RectPathButtonStyle}" Tag="{StaticResource GeoClock}"  />
        </StackPanel>
        <Popup IsOpen="{Binding IsNullMsg,IsAsync=True}" PlacementTarget="{Binding ElementName=btnSend,Mode=OneWay}" 
            Placement="Top" AllowsTransparency="True" HorizontalOffset="-35" StaysOpen="False">
            <Border Padding="10" x:Name="ppBD" >
                <Grid  Effect="{StaticResource LightEffect}" RenderTransformOrigin="0.5,1">
                    <Grid.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform x:Name="scale" />
                        </TransformGroup>
                    </Grid.RenderTransform>
                    <Grid.Triggers>
                        <EventTrigger RoutedEvent="Loaded">
                            <BeginStoryboard>
                                <Storyboard AutoReverse="True" Duration="0:0:1.5">
                                    <DoubleAnimation From="0" To="1" Duration="0:0:0.2" Storyboard.TargetName="scale" Storyboard.TargetProperty="ScaleX"/>
                                    <DoubleAnimation From="0" To="1"  Duration="0:0:0.2" Storyboard.TargetName="scale" Storyboard.TargetProperty="ScaleY"/>
                                    <!--<DoubleAnimationUsingKeyFrames  Storyboard.TargetName="ppBD" Storyboard.TargetProperty="Opacity">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:1" Value="1"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:2" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>-->
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Grid.Triggers>
                    <Rectangle Stroke="{StaticResource DarkForeground}" Fill="White" StrokeThickness="1" RadiusX="5" RadiusY="5"/>
                    <Path  Stroke="{StaticResource DarkForeground}" Fill="White" StrokeThickness="1"
                       Data="M0,0 8,10  16,0" Margin="0,0,0,-9"  HorizontalAlignment="Center" VerticalAlignment="Bottom"/>
                    <TextBlock Text="不能发送空白信息" Margin="10"/>
                </Grid>
            </Border>
        </Popup>

        <Rectangle Style="{StaticResource LineRectStyle}" Grid.Row="2"/>
        <GridSplitter Grid.Row="2" Height="5" Background="Transparent" VerticalAlignment="Bottom" HorizontalAlignment="Stretch" FocusVisualStyle="{x:Null}" />

    </Grid>
</UserControl>
